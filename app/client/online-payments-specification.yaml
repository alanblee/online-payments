openapi: '3.0.1'
info:
  title: 'Merchant Payments API'
  description: 'Payments API for processing consumer payments'
  version: '2.0.52'
  contact:
    name: 'Merchant Payments API Support'
    url: 'https://developer.jpmorgan.com/support'
    email: 'developer_help@jpmorgan.com'
servers:
  - url: 'https://api-ms.payments.jpmorgan.com/api/v2'
    description: 'Production Environment'
  - url: 'https://cat-api.merchant.jpmorgan.com/api/v2'
    description: 'Test Environment'
tags:
  - name: 'Transactions'
    description: 'Initiating and processing a payment'
  - name: 'Health Check'
    description: 'Check if a particular service is available'
  - name: 'Fraud'
    description: 'Fraud check for a payment'
paths:
  /healthcheck/payments:
    get:
      summary: 'Health check for payments'
      operationId: 'V2PaymentHealthGet'
      tags:
        - 'Health Check'
      description: 'Health check for payments'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth Basic:
                  value:
                    interfaceResponseStatusName: 'Pass'
        '429':
          description: 'Too Many Requests'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth CIT Onetime Stored:
                  value:
                    interfaceResponseStatusName: 'FAIL'
  /healthcheck/refunds:
    get:
      summary: 'Health check for refunds'
      operationId: 'V2RefundHealthGet'
      tags:
        - 'Health Check'
      description: 'Health check for refunds'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth Basic:
                  value:
                    interfaceResponseStatusName: 'Pass'
        '429':
          description: 'Too Many Requests'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth CIT Onetime Stored:
                  value:
                    interfaceResponseStatusName: 'FAIL'
  /healthcheck/verifications:
    get:
      summary: 'Health check for verifications'
      operationId: 'V2VerificationHealthGet'
      tags:
        - 'Health Check'
      description: 'Health check for verifications'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth Basic:
                  value:
                    interfaceResponseStatusName: 'Pass'
        '429':
          description: 'Too Many Requests'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth CIT Onetime Stored:
                  value:
                    interfaceResponseStatusName: 'FAIL'
  /payments:
    post:
      summary: 'Create a payment'
      operationId: 'V2PaymentPost'
      tags:
        - 'Transactions'
      description:
        'Create a payment request with a specified payment instrument.
        Authorization and Sale (Authorization and capture).'
      parameters:
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Approved Auth Basic:
              value: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            Approved Auth CIT Onetime Stored:
              value: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            Approved Auth MIT Subsequent Stored:
              value: '10cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Approved Auth Basic:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
            Approved Auth CIT Onetime Stored:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
            Approved Auth MIT Subsequent Stored:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Approved Auth Basic:
              value: '998482157632'
            Approved Auth CIT Onetime Stored:
              value: '998482157632'
            Approved Auth MIT Subsequent Stored:
              value: '998482157632'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      requestBody:
        description: 'Payment request information'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment'
            examples:
              Approved Auth Basic:
                value:
                  captureMethod: 'NOW'
                  amount: 1234
                  currency: 'USD'
                  merchant:
                    merchantSoftware:
                      companyName: 'Payment Company'
                      productName: 'Application Name'
                      version: '1.235'
                    merchantCategoryCode: '4899'
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 5
                        year: 2027
                      isBillPayment: true
                  initiatorType: 'CARDHOLDER'
                  accountOnFile: 'NOT_STORED'
                  isAmountFinal: true
              Approved Auth CIT Onetime Stored:
                value:
                  captureMethod: 'NOW'
                  amount: 10000
                  currency: 'USD'
                  merchant:
                    merchantSoftware:
                      companyName: 'Payment Company'
                      productName: 'Application Name'
                    merchantCategoryCode: '4899'
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 10
                        year: 2040
                  initiatorType: 'CARDHOLDER'
                  accountOnFile: 'TO_BE_STORED'
                  originalTransactionId: '16444'
                  accountHolder:
                    referenceId: '1245'
                    fullName: 'John Doe'
                    email: 'john.doe@gmail.com'
                    IPAddress: '104.18.127.1'
                    billingAddress:
                      line1: '123 main street'
                      line2: 'Apartment 2'
                      city: 'Tampa'
                      state: 'FL'
                      postalCode: '33785'
                  shipTo:
                    shippingAddress:
                      line1: '123 main street'
                      line2: 'Apartment 2'
                      city: 'Tampa'
                      state: 'FL'
                      postalCode: '33785'
              Approved Auth MIT Subsequent Stored:
                value:
                  captureMethod: 'NOW'
                  amount: 10000
                  currency: 'USD'
                  merchant:
                    merchantSoftware:
                      companyName: 'Payment Company'
                      productName: 'Application Name'
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 4
                        year: 2025
                      cvv: '100'
                  initiatorType: 'MERCHANT'
                  accountOnFile: 'STORED'
                  originalTransactionId: '16'
                  isAmountFinal: true
                  recurring:
                    recurringSequence: 'FIRST'
                    agreementId: '1235'
                    paymentAgreementExpiryDate: '2040-10-30'
                  accountHolder:
                    referenceId: '1245'
                    consumerIdCreationDate: '2021-09-01'
                    fullName: 'John Doe'
                    email: 'john.doe@gmail.com'
                    IPAddress: '104.18.127.1'
                    billingAddress:
                      line1: '123 main street'
                      line2: 'Apartment 3b'
                      city: 'Tampa'
                      state: 'FL'
                      postalCode: '33626'
                  shipTo:
                    shippingDescription: 'Personal Item shipping to my home'
                    shippingAddress:
                      line1: '123 main street'
                      line2: 'Apartment 3b'
                      city: 'Tampa'
                      state: 'FL'
                      postalCode: '33626'
                    fullName: 'John Doe'
                    email: 'john.doe@gmail.com'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
              examples:
                Approved Auth Basic:
                  value:
                    transactionId: 'cdf62f90-6440-496f-817c-c05dd3b7b01a'
                    requestId: '5e720ee0-0192-4f7f-82d9-6248096832a0'
                    transactionState: 'CLOSED'
                    responseStatus: 'SUCCESS'
                    responseCode: 'APPROVED'
                    responseMessage: 'Transaction approved by Issuer'
                    paymentMethodType:
                      card:
                        expiry:
                          month: 5
                          year: 2027
                        cardType: 'VI'
                        cardTypeName: 'VISA'
                        isBillPayment: true
                        maskedAccountNumber: '411234XXXXXX4113'
                        cardTypeIndicators:
                          issuanceCountryCode: 'USA'
                          isDurbinRegulated: false
                          cardProductTypes:
                            - 'PINLESS_DEBIT'
                        networkResponse:
                          addressVerificationResult: 'NOT_REQUESTED'
                          addressVerificationResultCode: ''
                          cardVerificationResultCode: ''
                    captureMethod: 'NOW'
                    isCapture: true
                    initiatorType: 'CARDHOLDER'
                    accountOnFile: 'NOT_STORED'
                    transactionDate: '2022-05-04T16:04:27.027Z'
                    approvalCode: 'tst269'
                    hostMessage: 'Approved'
                    amount: 1234
                    currency: 'USD'
                    remainingRefundableAmount: 1234
                    remainingAuthAmount: 1234
                    hostReferenceId: 'NjKmDGcGYAJ6wsedRnMCj4'
                    merchant:
                      merchantId: '17904369'
                      merchantSoftware:
                        companyName: 'Payment Company'
                        productName: 'Application Name'
                        version: '1.235'
                      merchantCategoryCode: '4899'
                Approved Auth CIT Onetime Stored:
                  value:
                    transactionId: 'c9d21e9e-9263-4c6e-a6b7-ef60cbceeb49'
                    requestId: '3f4628c8-43b1-4753-9d0d-6e31a47d6077'
                    transactionState: 'AUTHORIZED'
                    responseStatus: 'SUCCESS'
                    responseCode: 'APPROVED'
                    responseMessage: 'Transaction approved by Issuer'
                    paymentMethodType:
                      card:
                        expiry:
                          month: 10
                          year: 2040
                        cardType: 'VI'
                        cardTypeName: 'VISA'
                        maskedAccountNumber: '401200XXXXXX0026'
                        cardTypeIndicators:
                          issuanceCountryCode: 'USA'
                          isDurbinRegulated: false
                          cardProductTypes:
                            - 'PINLESS_DEBIT'
                        networkResponse:
                          addressVerificationResult: 'NOT_REQUESTED'
                          addressVerificationResultCode: ''
                          cardVerificationResultCode: 'M'
                          networkTransactionId: '012125692162451'
                    isCapture: true
                    captureMethod: 'NOW'
                    initiatorType: 'CARDHOLDER'
                    accountOnFile: 'TO_BE_STORED'
                    transactionDate: '2022-05-04T20:04:25.025Z'
                    approvalCode: 'tst904'
                    hostMessage: 'Approved'
                    amount: 10000
                    currency: 'USD'
                    remainingRefundableAmount: 1500
                    hostReferenceId: 'sGD8MSXuJan0ytfXIJAP57'
                    merchant:
                      merchantId: '17904369'
                      merchantSoftware:
                        companyName: 'Payment Company'
                        productName: 'Application Name'
                      merchantCategoryCode: '4899'
                    recurring: null
                    accountHolder:
                      referenceId: '1245'
                      IPAddress: '104.18.127.1'
                    shipTo: null
                Approved Auth MIT Subsequent Stored:
                  value:
                    transactionId: 'd461bd0c-2f6d-4b85-9ce7-552651d0edea'
                    requestId: 'ca20dfe6-2861-41fa-ae1d-c037978635e8'
                    transactionState: 'AUTHORIZED'
                    responseStatus: 'SUCCESS'
                    responseCode: 'APPROVED'
                    responseMessage: 'Transaction approved by Issuer'
                    paymentMethodType:
                      card:
                        expiry:
                          month: 4
                          year: 2025
                        cardType: 'VI'
                        cardTypeName: 'VISA'
                        maskedAccountNumber: '411234XXXXXX4113'
                        cardTypeIndicators:
                          issuanceCountryCode: 'USA'
                          isDurbinRegulated: false
                          cardProductTypes:
                            - 'PINLESS_DEBIT'
                        networkResponse:
                          addressVerificationResult: 'NOT_REQUESTED'
                          addressVerificationResultCode: ''
                          cardVerificationResultCode: 'M'
                    initiatorType: 'MERCHANT'
                    accountOnFile: 'STORED'
                    transactionDate: '2022-05-04T20:04:25.025Z'
                    approvalCode: 'tst982'
                    hostMessage: 'Approved'
                    amount: 10000
                    currency: 'USD'
                    hostReferenceId: 'G0i19bLbf0L02Z9g1GiEz4'
                    merchant:
                      merchantSoftware:
                        companyName: 'Payment Company'
                        productName: 'Application Name'
                    recurring:
                      recurringSequence: 'FIRST'
                      agreementId: '1235'
                      paymentAgreementExpiryDate: '2040-10-30'
                    shipTo:
                      shippingDescription: 'Personal Item shipping to my home'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
    get:
      summary: 'Get a specific payment transaction by request Id'
      operationId: 'V2PaymentGet'
      tags:
        - 'Transactions'
      description: 'Request Original Authorization Transaction details'
      parameters:
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Success:
              value: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            Error:
              value: '11cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'requestIdentifier'
          in: 'query'
          required: true
          schema:
            type: 'string'
            example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'The request identifier for the previous attempted transaction to
            query by.'
          examples:
            Success:
              value: '14cc0270-7bed-11e9-a188-1763956dd7f6'
            Error:
              value: '15cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
            Error:
              value:
                "Bearer\n          eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '991234567890'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /payments/{id}:
    patch:
      summary: 'Update payment transaction by transaction Id'
      operationId: 'V2PaymentPatch'
      tags:
        - 'Transactions'
      description:
        'Update an existing payment 1.Capture a payment for settlement. 2. Void
        a payment and authorization. The transaction will not settle. 3. Update
        a payment.'
      parameters:
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
          description: 'Identifier for the transaction'
          examples:
            Error:
              value: '22222222-7bea-11e9-a188-1763956dd7f6'
            Success Capture:
              value: '44444444-7bea-11e9-a188-1763956dd7f6'
            Success Void:
              value: '66666666-7bea-11e9-a188-1763956dd7f6'
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Error:
              value: '22cc0270-7bed-11e9-a188-1763956dd7f6'
            Success Capture:
              value: '11cc0270-7bed-11e9-a188-1763956dd7f6'
            Success Void:
              value: '12cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Error:
              value: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUz'
            Success Capture:
              value:
                "Bearer\n          eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
            Success Void:
              value:
                "Bearer\n          eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Error:
              value: '998482157632'
            Success Capture:
              value: '998482157632'
            Success Void:
              value: '998482157632'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      requestBody:
        description: 'The payment update request.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentPatch'
            examples:
              Error:
                value:
                  captureMethod: 'NOW'
              Success Capture:
                value:
                  captureMethod: 'NOW'
              Success Void:
                value:
                  isVoid: true
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
    get:
      summary: 'Get a specific payment transaction by transaction Id'
      operationId: 'V2PaymentByIdGet'
      tags:
        - 'Transactions'
      description: 'Get a specific payment transaction by transaction Id'
      parameters:
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
            Error:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157632'
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
          description: 'Identifier for the transaction'
          examples:
            Success:
              value: '66666666-7bea-11e9-a188-1763956dd7f6'
            Error:
              value: '22222222-7bea-11e9-a188-1763956dd7f6'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /payments/{id}/captures:
    post:
      summary: 'Capture a payment'
      operationId: 'V2CapturePost'
      tags:
        - 'Transactions'
      description:
        'Capture a payment request for existing authorized transaction'
      parameters:
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Success First Capture:
              value: '252f0171-9512-4f54-94e5-5c046dc55eab'
            Success Final Capture:
              value: 'f9c75448-0764-4eee-b67f-d6e9d2fb167f'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success First Capture:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
            Success Final Capture:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success First Capture:
              value: '000017904371'
            Success Final Capture:
              value: '000017904371'
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
          description: 'Identifies a unique occurrence of a transaction.'
          examples:
            Success First Capture:
              value: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
            Success Final Capture:
              value: '22b88670-272d-4d69-a011-b728b7b45991'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      requestBody:
        description: 'Capture Request'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/captureRequest'
            examples:
              Success First Capture:
                value:
                  amount: 100
                  currency: 'USD'
                  multiCapture:
                    multiCaptureSequenceNumber: '1'
                    multiCaptureRecordCount: 2
                    isFinalCapture: false
              Success Final Capture:
                value:
                  amount: 100
                  currency: 'USD'
                  multiCapture:
                    multiCaptureSequenceNumber: '2'
                    multiCaptureRecordCount: 2
                    isFinalCapture: true
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
              examples:
                Success First Capture:
                  value:
                    transactionId: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
                    requestId: '252f0171-9512-4f54-94e5-5c046dc55eab'
                    transactionState: 'CLOSED'
                    responseCode: 'ACCEPTED'
                    responseStatus: 'SUCCESS'
                    responseMessage: 'Transaction accepted'
                    paymentMethodType:
                      card:
                        cardType: 'VI'
                        isBillPayment: true
                        maskedAccountNumber: '401200XXXXXX0026'
                        cardTypeIndicators:
                          issuanceCountryCode: 'USA'
                          isDurbinRegulated: false
                          cardProductTypes:
                            - 'COMMERCIAL'
                            - 'PINLESS_DEBIT'
                        networkResponse:
                          cardVerificationResult: 'NOT_REQUESTED'
                          networkTransactionId: '013094692162180'
                          paymentAccountReference: 'Q1J4Z28RKA1EBL470G9XYG90R5D3E'
                        paymentTokens:
                          tokenProvider: 'SAFETECH'
                          responseStatus: 'ERROR'
                          tokenServiceResponseMessage:
                            'Merchant record not found or not enabled for
                            Acquirer Token'
                          tokenServiceResponseCode: 'BAD_REQUEST'
                    captureMethod: 'NOW'
                    initiatorType: 'CARDHOLDER'
                    accountOnFile: 'NOT_STORED'
                    transactionDate: '2023-04-04T21:04:33.764Z'
                    isAmountFinal: true
                    amount: 100
                    currency: 'USD'
                    remainingRefundableAmount: 100
                    remainingAuthAmount: 1134
                    hostReferenceId: 'aTWjsNr8fCy2ZjS6LdpEm'
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: 'Payment Company'
                        productName: 'Application Name'
                        version: '1.235'
                      merchantCategoryCode: '4899'
                    paymentRequest:
                      paymentRequestId: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
                      paymentRequestStatus: 'OPEN'
                      authorizations:
                        - authorizationId: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
                          amount: 1234
                          transactionStatusCode: 'AUTHORIZED'
                          authorizationType: 'INITIAL'
                      captures:
                        - captureId: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
                          amount: 100
                          transactionStatusCode: 'CLOSED'
                          captureRemainingRefundableAmount: 100
                Success Final Capture:
                  value:
                    transactionId: '22b88670-272d-4d69-a011-b728b7b45991'
                    requestId: 'f9c75448-0764-4eee-b67f-d6e9d2fb167f'
                    transactionState: 'CLOSED'
                    responseCode: 'ACCEPTED'
                    responseStatus: 'SUCCESS'
                    responseMessage: 'Transaction accepted'
                    paymentMethodType:
                      card:
                        cardType: 'VI'
                        isBillPayment: true
                        maskedAccountNumber: '401200XXXXXX0026'
                        cardTypeIndicators:
                          issuanceCountryCode: 'USA'
                          isDurbinRegulated: false
                          cardProductTypes:
                            - 'COMMERCIAL'
                            - 'PINLESS_DEBIT'
                        networkResponse:
                          cardVerificationResult: 'NOT_REQUESTED'
                          networkTransactionId: '013094692162180'
                          paymentAccountReference: 'Q1J4Z28RKA1EBL470G9XYG90R5D3E'
                        paymentTokens:
                          tokenProvider: 'SAFETECH'
                          responseStatus: 'ERROR'
                          tokenServiceResponseMessage:
                            'Merchant record not found or not enabled for
                            Acquirer Token'
                          tokenServiceResponseCode: 'BAD_REQUEST'
                    captureMethod: 'NOW'
                    initiatorType: 'CARDHOLDER'
                    accountOnFile: 'NOT_STORED'
                    transactionDate: '2023-04-04T21:04:33.764Z'
                    isAmountFinal: true
                    amount: 100
                    currency: 'USD'
                    remainingRefundableAmount: 100
                    remainingAuthAmount: 1034
                    hostReferenceId: 'aTWjsNr8fCy2ZjS6LdpEm'
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: 'Payment Company'
                        productName: 'Application Name'
                        version: '1.235'
                      merchantCategoryCode: '4899'
                    paymentRequest:
                      paymentRequestId: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
                      paymentRequestStatus: 'CLOSED'
                      authorizations:
                        - authorizationId: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
                          amount: 1234
                          transactionStatusCode: 'AUTHORIZED'
                          authorizationType: 'INITIAL'
                      captures:
                        - captureId: '22b88670-272d-4d69-a011-b728b7b45991'
                          amount: 100
                          transactionStatusCode: 'CLOSED'
                          captureRemainingRefundableAmount: 100
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /captures/{id}:
    get:
      summary: 'Retrieve Payment Details by transaction Id'
      operationId: 'V2CaptureByIdGet'
      tags:
        - 'Transactions'
      description:
        'Request capture details for a specific capture request by captureId'
      parameters:
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Success Final Capture:
              value: 'f9c65662-0764-4eee-b67f-d6e9d2fb167f'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success Final Capture:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success Final Capture:
              value: '000017904371'
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
          description: 'Identifies a unique occurrence of a transaction.'
          examples:
            Success Final Capture:
              value: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
              examples:
                Success Final Capture:
                  value:
                    transactionId: '22b88670-272d-4d69-a011-b728b7b45991'
                    requestId: 'f9c75448-0764-4eee-b67f-d6e9d2fb167f'
                    transactionState: 'CLOSED'
                    responseCode: 'ACCEPTED'
                    responseStatus: 'SUCCESS'
                    responseMessage: 'Transaction accepted'
                    paymentMethodType:
                      card:
                        cardType: 'VI'
                        isBillPayment: true
                        maskedAccountNumber: '401200XXXXXX0026'
                        cardTypeIndicators:
                          issuanceCountryCode: 'USA'
                          isDurbinRegulated: false
                          cardProductTypes:
                            - 'COMMERCIAL'
                            - 'PINLESS_DEBIT'
                        networkResponse:
                          cardVerificationResult: 'NOT_REQUESTED'
                          networkTransactionId: '013094692162180'
                          paymentAccountReference: 'Q1J4Z28RKA1EBL470G9XYG90R5D3E'
                        paymentTokens:
                          tokenProvider: 'SAFETECH'
                          responseStatus: 'ERROR'
                          tokenServiceResponseMessage:
                            'Merchant record not found or not enabled for
                            Acquirer Token'
                          tokenServiceResponseCode: 'BAD_REQUEST'
                    captureMethod: 'NOW'
                    initiatorType: 'CARDHOLDER'
                    accountOnFile: 'NOT_STORED'
                    transactionDate: '2023-04-04T21:04:33.764Z'
                    isAmountFinal: true
                    amount: 100
                    currency: 'USD'
                    remainingRefundableAmount: 100
                    remainingAuthAmount: 1034
                    hostReferenceId: 'aTWjsNr8fCy2ZjS6LdpEm'
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: 'Payment Company'
                        productName: 'Application Name'
                        version: '1.235'
                      merchantCategoryCode: '4899'
                    paymentRequest:
                      paymentRequestId: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
                      paymentRequestStatus: 'CLOSED'
                      authorizations:
                        - authorizationId: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
                          amount: 1234
                          transactionStatusCode: 'AUTHORIZED'
                          authorizationType: 'INITIAL'
                      captures:
                        - captureId: '22b88670-272d-4d69-a011-b728b7b45991'
                          amount: 100
                          transactionStatusCode: 'CLOSED'
                          captureRemainingRefundableAmount: 100
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /captures:
    get:
      summary: 'Retrieve Payment Details'
      operationId: 'V2CaptureGet'
      tags:
        - 'Transactions'
      description: 'Request capture details for a specific capture request'
      parameters:
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Success Final Capture:
              value: 'f9c65662-0764-4eee-b67f-d6e9d2fb167f'
        - name: 'requestIdentifier'
          in: 'query'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Success Final Capture:
              value: 'f9c75448-0764-4eee-b67f-d6e9d2fb167f'
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success Final Capture:
              value: '000017904371'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success Final Capture:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
              examples:
                Success Final Capture:
                  value:
                    transactionId: '22b88670-272d-4d69-a011-b728b7b45991'
                    requestId: 'f9c75448-0764-4eee-b67f-d6e9d2fb167f'
                    transactionState: 'CLOSED'
                    responseCode: 'ACCEPTED'
                    responseStatus: 'SUCCESS'
                    responseMessage: 'Transaction accepted'
                    paymentMethodType:
                      card:
                        cardType: 'VI'
                        isBillPayment: true
                        maskedAccountNumber: '401200XXXXXX0026'
                        cardTypeIndicators:
                          issuanceCountryCode: 'USA'
                          isDurbinRegulated: false
                          cardProductTypes:
                            - 'COMMERCIAL'
                            - 'PINLESS_DEBIT'
                        networkResponse:
                          cardVerificationResult: 'NOT_REQUESTED'
                          networkTransactionId: '013094692162180'
                          paymentAccountReference: 'Q1J4Z28RKA1EBL470G9XYG90R5D3E'
                        paymentTokens:
                          tokenProvider: 'SAFETECH'
                          responseStatus: 'ERROR'
                          tokenServiceResponseMessage:
                            'Merchant record not found or not enabled for
                            Acquirer Token'
                          tokenServiceResponseCode: 'BAD_REQUEST'
                    captureMethod: 'NOW'
                    initiatorType: 'CARDHOLDER'
                    accountOnFile: 'NOT_STORED'
                    transactionDate: '2023-04-04T21:04:33.764Z'
                    isAmountFinal: true
                    amount: 100
                    currency: 'USD'
                    remainingRefundableAmount: 100
                    remainingAuthAmount: 1034
                    hostReferenceId: 'aTWjsNr8fCy2ZjS6LdpEm'
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: 'Payment Company'
                        productName: 'Application Name'
                        version: '1.235'
                      merchantCategoryCode: '4899'
                    paymentRequest:
                      paymentRequestId: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
                      paymentRequestStatus: 'CLOSED'
                      authorizations:
                        - authorizationId: 'e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a'
                          amount: 1234
                          transactionStatusCode: 'AUTHORIZED'
                          authorizationType: 'INITIAL'
                      captures:
                        - captureId: '22b88670-272d-4d69-a011-b728b7b45991'
                          amount: 100
                          transactionStatusCode: 'CLOSED'
                          captureRemainingRefundableAmount: 100
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /refunds:
    post:
      summary: 'Create a refund'
      operationId: 'V2RefundPost'
      tags:
        - 'Transactions'
      description:
        'Creates a refund request and returns funds to the consumer. 1. For
        refund associated with a previous payment, send transactionReferenceId.
        2. For standalone refunds, send order and payment objects.'
      parameters:
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Stand Alone Refund:
              value: '11cc0280-7bed-11e9-a188-1763956dd7f6'
            Referenced Refund:
              value: '12cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Stand Alone Refund:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
            Referenced Refund:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Stand Alone Refund:
              value: '998482157632'
            Referenced Refund:
              value: '998482157632'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      requestBody:
        description: 'The refund request.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refund'
            examples:
              Stand Alone Refund:
                value:
                  merchant:
                    merchantSoftware:
                      companyName: 'Payment Company'
                      productName: 'Application Name'
                      version: '1.235'
                    merchantCategoryCode: '4899'
                  amount: 1234
                  currency: 'USD'
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 5
                        year: 2025
              Referenced Refund:
                value:
                  merchant:
                    merchantSoftware:
                      companyName: 'Payment Company'
                      productName: 'Application Name'
                      version: '1.235'
                    merchantCategoryCode: '4899'
                  amount: 1234
                  currency: 'USD'
                  paymentMethodType:
                    transactionReference:
                      transactionReferenceId: '1c4b1100-4017-11e9-b649-8de064224186'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refundResponse'
              examples:
                Stand Alone Refund:
                  value:
                    transactionId: '7b27c7d4-a69d-49f5-98d5-291fbb242bb2'
                    requestId: '0a2f5c89-21dd-4d33-bf45-2e7abd1533dc'
                    transactionState: 'CLOSED'
                    amount: 1234
                    currency: 'USD'
                    responseStatus: 'SUCCESS'
                    responseCode: 'ACCEPTED'
                    responseMessage: 'Transaction approved by Issuer'
                    approvalCode: 'tst683'
                    hostMessage: 'Approved'
                    initiatorType: 'CARDHOLDER'
                    accountOnFile: 'NOT_STORED'
                    transactionDate: '2022-06-15T13:03:45.507Z'
                    merchant:
                      merchantId: '999433880137'
                      merchantSoftware:
                        companyName: 'Payment Company'
                        productName: 'Application Name'
                        version: '1.235'
                      merchantCategoryCode: '4899'
                    paymentMethodType:
                      card:
                        expiry:
                          month: 5
                          year: 2025
                        cardType: 'VI'
                        cardTypeName: 'VISA'
                        maskedAccountNumber: '411234XXXXXX4113'
                    hostReferenceId: 'nw4Rp6yw6vPN1mnl9uogi7'
                Referenced Refund:
                  value:
                    transactionId: '7b27c7d4-a69d-49f5-98d5-291fbb242bb2'
                    requestId: '7b27c7d4-a69d-49f5-98d5-291fbb242bb2'
                    transactionState: 'CLOSED'
                    amount: 1234
                    currency: 'USD'
                    responseStatus: 'SUCCESS'
                    responseCode: 'ACCEPTED'
                    responseMessage: 'Transaction approved by Issuer'
                    remainingRefundableAmount: 0
                    approvalCode: 'tst683'
                    hostMessage: 'Approved'
                    initiatorType: 'CARDHOLDER'
                    accountOnFile: 'NOT_STORED'
                    transactionDate: '2022-06-15T13:03:45.507Z'
                    merchant:
                      merchantId: '999433880137'
                      merchantSoftware:
                        companyName: 'Payment Company'
                        productName: 'Application Name'
                        version: '1.235'
                      merchantCategoryCode: '4899'
                    paymentMethodType:
                      card:
                        expiry:
                          month: 5
                          year: 2025
                        cardTypeName: 'VISA'
                        originalNetworkTransactionId: '1c4b1100-4017-11e9-b649-8de064224186'
                        maskedAccountNumber: '411234XXXXXX4113'
                        maskedCardNumber: '1c4b1100-4017-11e9-b649-8de064224186'
                    hostReferenceId: 'nw4Rp6yw6vPN1mnl9uogi7'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
    get:
      summary: 'Get a specific refund transaction by request Id'
      operationId: 'V2RefundGet'
      tags:
        - 'Transactions'
      description:
        'Creates a refund request and returns funds to the consumer. 1. For
        refund associated with a previous payment, send transactionReferenceId.
        2. For standalone refunds, send order and payment objects.'
      parameters:
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Success:
              value: '12cc0270-7bed-11e9-a188-1763956dd7f6'
            Error:
              value: '11cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'requestIdentifier'
          in: 'query'
          required: true
          schema:
            type: 'string'
            example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'The request identifier for the previous attempted transaction to
            query by.'
          examples:
            Success:
              value: '14cc0270-7bed-11e9-a188-1763956dd7f6'
            Error:
              value: '15cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
            Error:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157632'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refundResponse'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /refunds/{id}:
    get:
      summary: 'Get a specific refund transaction by transaction Id'
      operationId: 'V2RefundByIdGet'
      tags:
        - 'Transactions'
      description: 'Get a specific refund transaction by transaction Id'
      parameters:
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
            Error:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157632'
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
          description: 'Identifier for the transaction'
          examples:
            Success:
              value: '66666666-7bea-11e9-a188-1763956dd7f6'
            Error:
              value: '22222222-7bea-11e9-a188-1763956dd7f6'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refundResponse'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /verifications:
    post:
      summary: 'Verify a payment instrument'
      operationId: 'V2VerificationPost'
      tags:
        - 'Transactions'
      description:
        'Validate a payment instrument with cardholder information without
        placing a funds hold on the consumer account (Not supported by all
        payment methods)'
      parameters:
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Basic Verification AVS:
              value: '12cc0270-7bed-11e9-a188-1763956dd7f6'
            ACH Verification Basic:
              value: '18cc0270-7bed-11e9-a188-1763956dd7f6'
            ACH Verification ACCOUNT_OWNER:
              value: '19cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Basic Verification AVS:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
            ACH Verification Basic:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
            ACH Verification ACCOUNT_OWNER:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Basic Verification AVS:
              value: '998482157632'
            ACH Verification Basic:
              value: '998482157632'
            ACH Verification ACCOUNT_OWNER:
              value: '998482157632'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      requestBody:
        description: 'The verification request.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verification'
            examples:
              Basic Verification AVS:
                value:
                  merchant:
                    merchantSoftware:
                      companyName: 'Payment Company'
                      productName: 'Application Name'
                      version: '1.235'
                    merchantCategoryCode: '4899'
                  currency: 'USD'
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 5
                        year: 2027
                  accountHolder:
                    referenceId: 'RF30012256'
                    consumerIdCreationDate: '2021-09-01'
                    fullName: 'John Doe'
                    email: 'john.doe@gmail.com'
                    billingAddress:
                      line1: '123 main street'
                      line2: 'Apartment 3b'
                      city: 'Tampa'
                      state: 'FL'
                      postalCode: '33626'
              ACH Verification Basic:
                value:
                  merchant:
                    merchantSoftware:
                      companyName: 'Payment Company'
                      productName: 'Application Name'
                      version: '1.235'
                  currency: 'USD'
                  paymentMethodType:
                    ach:
                      accountNumber: '1234567891'
                      financialInstitutionRoutingNumber: '123456789'
                      achVerificationType: 'BASIC'
              ACH Verification ACCOUNT_OWNER:
                value:
                  merchant:
                    merchantSoftware:
                      companyName: 'Payment Company'
                      productName: 'Application Name'
                      version: '1.235'
                  currency: 'USD'
                  paymentMethodType:
                    ach:
                      accountNumber: '1234567891'
                      financialInstitutionRoutingNumber: '123456789'
                      achVerificationType: 'ACCOUNT_OWNER'
                  accountHolder:
                    referenceId: '1245'
                    billingAddress:
                      line1: '123 main street'
                      city: 'Tampa'
                      state: 'FL'
                      postalCode: '33785'
                      countryCode: 'USA'
                    firstName: 'John'
                    lastName: 'Doe'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verificationResponse'
              examples:
                Basic Verification AVS:
                  value:
                    transactionId: '7c7d2a47-0d36-41ed-bf12-7a5388d4edd6'
                    requestId: 'bf51d288-1d1c-4772-89e1-13289435077a'
                    currency: 'USD'
                    responseStatus: 'SUCCESS'
                    responseCode: 'APPROVED'
                    responseMessage: 'Transaction approved by Issuer'
                    hostMessage: 'APPROVED'
                    paymentMethodType:
                      card:
                        expiry:
                          month: 5
                          year: 2027
                        cardType: 'VI'
                        cardTypeName: 'VISA'
                        maskedAccountNumber: '411234XXXXXX4113'
                        networkResponse:
                          addressVerificationResultCode: 'N'
                          cardVerificationResult: 'MATCH'
                          cardVerificationResultCode: 'I3'
                          networkTransactionId: '012166692165035'
                ACH Verification Basic:
                  value:
                    transactionId: '902a2fd3-3e3f-4302-a8e0-c3c52bf49087'
                    requestId: '3af75aad-111b-4830-abfa-9d657ee79883'
                    currency: 'USD'
                    responseStatus: 'SUCCESS'
                    responseCode: 'APPROVED'
                    responseMessage: 'Transaction accepted'
                    hostMessage: 'Validated'
                    paymentMethodType:
                      ach:
                        maskedAccountNumber: 'XXXXXX7891'
                        financialInstitutionRoutingNumber: '123456789'
                        achVerificationType: 'BASIC'
                    transactionDate: '2023-07-06T15:25:58.061Z'
                    approvalCode: '123456'
                ACH Verification ACCOUNT_OWNER:
                  value:
                    transactionId: '902a2fd3-3e3f-4302-a8e0-c3c52bf49087'
                    requestId: '3af75aad-111b-4830-abfa-9d657ee79883'
                    currency: 'USD'
                    responseStatus: 'SUCCESS'
                    responseCode: 'APPROVED'
                    responseMessage: 'Transaction accepted'
                    hostMessage: 'Validated'
                    paymentMethodType:
                      ach:
                        maskedAccountNumber: 'XXXXXX7891'
                        financialInstitutionRoutingNumber: '123456789'
                        achVerificationType: 'ACCOUNT_OWNER'
                    transactionDate: '2023-07-06T15:25:58.061Z'
                    hostReferenceId: '9vkyd6pg6CDE6iWy4gJlv6'
                    approvalCode: '123456'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
    get:
      summary: 'Get a specific verification transaction by request Id'
      operationId: 'V2VerificationGet'
      tags:
        - 'Transactions'
      description:
        'Creates a refund request and returns funds to the consumer. 1. For
        refund associated with a previous payment, send transactionReferenceId.
        2. For standalone refunds, send order and payment objects.'
      parameters:
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Success:
              value: '12cc0270-7bed-11e9-a188-1763956dd7f6'
            Error:
              value: '11cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'requestIdentifier'
          in: 'query'
          required: true
          schema:
            type: 'string'
            example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'The request identifier for the previous attempted transaction to
            query by.'
          examples:
            Success:
              value: '14cc0270-7bed-11e9-a188-1763956dd7f6'
            Error:
              value: '15cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
            Error:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157632'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verificationResponse'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /verifications/{id}:
    get:
      summary: 'Get a specific verification transaction by transaction Id'
      operationId: 'V2VerificationByIdGet'
      tags:
        - 'Transactions'
      description:
        'Request Original Authorization Transaction details for an incoming
        notification subscription'
      parameters:
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
          description: 'Identifier for the transaction'
          examples:
            Success:
              value: '66666666-7bea-11e9-a188-1763956dd7f6'
            Error:
              value: '44444444-7bea-11e9-a188-1763956dd7f6'
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Success:
              value: '12cc0270-7bed-11e9-a188-1763956dd7f6'
            Error:
              value: '12cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
            Error:
              value:
                "Bearer\n    eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157632'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verificationResponse'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /fraudcheck:
    post:
      summary: 'Fraud check'
      operationId: 'V2FraudCheckPost'
      tags:
        - 'Fraud'
      description:
        'Validate a payment instrument with cardholder information without
        placing a funds hold on the consumer account (Not supported by all
        payment methods)'
      parameters:
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success Fraud Check:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Success Fraud Check:
              value: '10cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success Fraud Check:
              value: '998482157632'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      requestBody:
        description: 'The fraud check request.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fraudCheckRequest'
            examples:
              Success Fraud Check:
                value:
                  amount: 100
                  currency: 'USD'
                  accountHolder:
                    email: 'john.dow@abc.com'
                    fullName: 'John Dow'
                  paymentMethodType:
                    expiry:
                      month: 5
                      year: 2024
                    accountNumber: '4012000033330026'
                  shipTo:
                    shippingAddress:
                      line1: '123 some street'
                      line2: 'Apartment 3b'
                      city: 'Tampa'
                      state: 'FL'
                      postalCode: '33626'
                  merchant:
                    merchantSoftware:
                      companyName: 'Payment Company'
                      productName: 'Application Name'
                      version: '1.235'
                    merchantCategoryCode: '4899'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fraudCheckResponse'
              examples:
                Success Fraud Check:
                  value:
                    transactionId: '91659309-b78a-4075-a18b-84f7e7a54b21'
                    requestId: '543ba35f-70d8-4370-97dd-9e602cf41b38'
                    riskDecision:
                      fraudRiskScore: '34'
                      fraudRuleAction: 'A'
                      digitalAlertRuleName: '0000='
                      fraudStatus: 'A000'
                      fraudStatusDescription: 'Fraud score successful'
                      fraudRiskResponse: 'A'
                    riskElement:
                      fraudEvaluatorTransactionId: 'K9SD0RKS4VYV'
                      highestRiskCountry: 'US'
                      highestRiskRegion: 'mn'
                      cardType: 'AX'
                      fourteenDaysTransactionCount: 0
                      sixHoursTransactionCount: 0
                      fourteenDaysCardRecordCount: 1
                      fourteenDaysDeviceRecordCount: 1
                      fourteenDaysEmailRecordCount: 1
                      deviceLayers: 'BE5170F6F4..23EA1C3E4B.7D240F5823.2FB5A18D3'
                      sessionMatchIndicator: false
                      hashedDigitalDeviceFingerprintIdentifier: 'OE445516POI154F34E1A3151BCE70C19'
                      deviceTimestamp: '2022-08-18+11:25'
                      deviceLocalTimeZone: '300'
                      deviceRegion: 'mn'
                      deviceCountry: 'US'
                      deviceProxyServer: false
                      browserJavaScriptEnabled: false
                      browserAdobeFlashEnabled: false
                      browserCookiesEnabled: false
                      deviceBrowserCountry: 'US'
                      deviceBrowserLanguage: 'EN'
                      mobileDevice: false
                      digitalDeviceType: 'Android'
                      deviceWirelessCapability: false
                      deviceVoiceControlled: false
                      deviceRemotelyControlCapability: false
                      deviceNetworkType: 'N'
                    hostReferenceId: '5hOQTa9S8l8GqINboAbLa4'
                    responseStatus: 'SUCCESS'
                    responseCode: 'ACCEPTED'
                    responseMessage: 'Transaction Accepted'
                    hostMessage: 'Successful Action Requested'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
    get:
      summary: 'Retrieve fraud response'
      operationId: 'V2FraudCheckget'
      tags:
        - 'Fraud'
      description:
        'Retrieve fraud score of a payment instrument with cardholder
        information without placing a funds hold on the consumer account (Not
        supported by all payment methods)'
      parameters:
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
            Error:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYT'
        - name: 'request-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            maxLength: 40
          description:
            'Merchant identifier for the request. The value must be unique.'
          examples:
            Success:
              value: '10cc0270-7bed-11e9-a188-1763956dd7f6'
            Error:
              value: '10cc0270-7bed-11e9-a188-1763956dd7f6'
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157632'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verificationResponse'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /fraudcheck/{id}:
    get:
      summary: 'Retrieve fraud response'
      operationId: 'V2FraudCheckByIdGet'
      tags:
        - 'Fraud'
      description:
        'Retrieve fraud score of a payment instrument with cardholder
        information without placing a funds hold on the consumer account (Not
        supported by all payment methods)'
      parameters:
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
          description: 'Identifier for the transaction'
          examples:
            Success:
              value: '66666666-7bea-11e9-a188-1763956dd7f6'
            Error:
              value: '44444444-7bea-11e9-a188-1763956dd7f6'
        - name: 'authorization'
          in: 'header'
          required: true
          schema:
            type: 'string'
          description:
            'This is used for specifying individual parameters under API
            endpoint methods.'
          examples:
            Success:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
            Error:
              value:
                'Bearer
                eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYT'
        - name: 'merchant-id'
          in: 'header'
          required: true
          schema:
            type: 'string'
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: 'Identifier for the merchant account'
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157630'
        - name: 'minorVersion'
          in: 'header'
          schema:
            type: 'string'
            example: '1'
          description: 'Identifier for the minor release version'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verificationResponse'
        '400':
          description: 'Badly formatted request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: 'Precondition failed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: 'Unexpected error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: 'Timeout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
components:
  parameters:
    authorization:
      name: 'Authorization'
      in: 'header'
      required: true
      schema:
        type: 'string'
        example:
          'Bearer
          eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a'
      description: 'OAuth2 bearer token - JWT'
      examples:
        Approved Auth Basic:
          value:
            "Bearer\n        eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
        Approved Auth CIT Onetime Stored:
          value:
            "Bearer\n        eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkpKRmRuSURYTngtTERNUWIzR3V4eVpSaC1xZyJ9.eyJhdWQiOiCBde1DOlVSSTpSUy0xMDMyNTctMjQ5NDEtQ29ubmVjdFBheW1lbnRzVWF0QXBwLVVBVCIsImlzcyI6Imh0dHA6Ly9pZGEuanBtb3JnYW5jaGFzZS5jb20vYWRmcy9zZXJ2aWNldy90cnVzdCIsImlhdCI6MTU2NTc5Mjk1NCwiZXhwIjoxNTY1ODIxNzU0LCJKUE1DSWRlbnRpZmllciI6Ik83MjI2NjAiLCJDbGllbnRJUEFkZHJlc3MiOiIxNjkuOTIuOC42OSIsImF1dGhtZXRob2QiOlsiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Rsc2NsaWVudCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5Il0sImFwcHR5cGUiOiJDb25maWRlbnRpYWwiLCJhcHBpZCI6IkNDLTEwMzI1Ny1PNzIyNjYwLTI3NzA5LVVBVCIsImF1dGhfdGltZSI6IjIwMTktMDgtMTRUMTQ6Mjk6MTQuMzY5WiIsInZlciI6IjEuake9.MlhM5J5LeFcquqCf8ZRn690eOOACedmEmakaHxRXD9nulYssakcyeAdTKCg19WV5loLWZtGCgkMaeriDtlA0oLKBoGyNkENgqpdfhTklzMEOBnrw042ShsksCLLD3xD4B30BInHbnUps-2vEzDza4JQFCukJWablkJg0RURQ4VNcgijifGVnGtyk8ps21gYOt-e3LqUNbhZs_Kc6JIDNKa4LQ_wQxhIKBHgyrbWd1QRTHP-ZX4UfGDTvKseTn8vc39LQPJyhvIMyvtic9SKoKJlxhirLRtvr0ygaVTVcreAPGo7nzamWD7W0CueUC8Gav_87EZai6dam7gAR4abQIZ_a"
    merchantId:
      name: 'Merchant-Id'
      in: 'header'
      required: true
      schema:
        type: 'string'
        example: '991234567890'
        minLength: 8
        maxLength: 12
      description: 'Identifier for the merchant account'
      examples:
        Approved Auth Basic:
          value: '998482157632'
        Approved Auth CIT Onetime Stored:
          value: '998482157632'
    requestIdentifier:
      name: 'requestIdentifier'
      in: 'query'
      required: true
      schema:
        type: 'string'
        example: '11cc0270-7bed-11e9-a188-1763956dd7f6'
        maxLength: 40
      description: 'Merchant generated identifier for request'
    id:
      name: 'id'
      in: 'path'
      required: true
      schema:
        type: 'string'
        example: '12cc0270-7bed-11e9-a188-1763956dd7f6'
      description: 'Identifier for the resource'
    minorVersion:
      name: 'minor-version'
      in: 'header'
      schema:
        type: 'string'
      description:
        'This is the number applied to a minor release of an API that includes
        some new features and functions.'
  schemas:
    accountUpdater:
      description:
        'Contains response information related to account updater request'
      type: 'object'
      properties:
        requestAccountUpdater:
          $ref: '#/components/schemas/requestAccountUpdater'
        accountNumber:
          description:
            'The Card Number is a number recognized by various payment systems
            to route debit card, ATM and credit Card transactions to an issuer
            and to identify the underlying account to which each transaction
            should be applied. Transactions may be initiated from physical or
            non-physical devices (e.g. debit card, ATM, credit card, Single Use
            Account (SUA), Near Field Communication (NFC), etc.).'
          type: 'string'
          readOnly: true
        newAccountExpiry:
          $ref: '#/components/schemas/panExpiry'
        accountUpdaterResponse:
          description:
            'Status of account updater request received from the network'
          type: 'string'
          readOnly: true
          enum:
            - 'NEW_ACCOUNT'
            - 'NEW_EXPIRY'
            - 'NEW_ACCOUNT_AND_EXPIRY'
            - 'CLOSED_ACCOUNT'
            - 'PROVIDED_EXPIRY_NEWER'
            - 'CONTACT_CARDHOLDER'
            - 'MATCH_NO_UPDATE'
            - 'NO_MATCH_NON_PARTICIPATING_BIN'
            - 'NO_MATCH_PARTICIPATING_BIN'
            - 'ISSUER_NOT_PARTICIPATING'
            - 'CARDHOLDER_OPT_OUT'
            - 'PORTFOLIO_CONVERSION'
        accountUpdaterReasonCode:
          description:
            'indicates whether Account Updater service was successfully evoked
            or if there was an error'
          type: 'string'
          readOnly: true
        accountUpdaterReasonMessage:
          description: 'long description of account updater results'
          type: 'string'
          readOnly: true
    payment:
      description: 'Request information for payment endpoint'
      type: 'object'
      required:
        - 'amount'
        - 'currency'
        - 'merchant'
        - 'paymentMethodType'
      properties:
        isCapture:
          $ref: '#/components/schemas/isCapture'
        captureMethod:
          $ref: '#/components/schemas/captureMethod'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        merchant:
          $ref: '#/components/schemas/merchant'
        paymentMethodType:
          $ref: '#/components/schemas/paymentMethodType'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        originalTransactionId:
          $ref: '#/components/schemas/originalTransactionId'
        isAmountFinal:
          $ref: '#/components/schemas/isAmountFinal'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        recurring:
          $ref: '#/components/schemas/recurring'
        installment:
          $ref: '#/components/schemas/installment'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        shipTo:
          $ref: '#/components/schemas/shipTo'
        risk:
          $ref: '#/components/schemas/risk'
        retailAddenda:
          $ref: '#/components/schemas/retailAddenda'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        partialAuthorizationSupport:
          $ref: '#/components/schemas/partialAuthorizationSupport'
        transactionRoutingOverrideList:
          $ref: '#/components/schemas/transactionRoutingOverrideList'
    paymentResponse:
      description: 'Response information for payment API calls'
      type: 'object'
      required:
        - 'transactionId'
        - 'requestId'
        - 'transactionState'
        - 'responseStatus'
        - 'responseCode'
        - 'responseMessage'
        - 'paymentMethodType'
      properties:
        transactionId:
          $ref: '#/components/schemas/transactionId'
        requestId:
          $ref: '#/components/schemas/requestId'
        transactionState:
          $ref: '#/components/schemas/transactionState'
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        responseMessage:
          $ref: '#/components/schemas/responseMessage'
        paymentMethodType:
          $ref: '#/components/schemas/paymentMethodType'
        captureMethod:
          $ref: '#/components/schemas/captureMethod'
        isCapture:
          $ref: '#/components/schemas/isCapture'
        captureTime:
          description:
            'Designates the hour (hh), minute (mm), seconds (ss) and date (if
            timestamp) or year (YYYY), month (MM), and day (DD) (if date) when
            the authorization is complete and the transaction is ready for
            settlement. The transaction can no longer be edited but can be
            voided.'
          type: 'string'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        originalTransactionId:
          $ref: '#/components/schemas/originalTransactionId'
        isVoid:
          $ref: '#/components/schemas/isVoid'
        transactionDate:
          $ref: '#/components/schemas/transactionTimestamp'
        approvalCode:
          $ref: '#/components/schemas/approvalCode'
        hostMessage:
          $ref: '#/components/schemas/hostMessage'
        isAmountFinal:
          $ref: '#/components/schemas/isAmountFinal'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        remainingRefundableAmount:
          $ref: '#/components/schemas/remainingRefundableAmount'
        remainingAuthAmount:
          description:
            'Monetary value of uncaptured, approved authorizations currently
            being held against the card for this transaction by a given
            Merchant.'
          type: 'integer'
          minimum: 1
          maximum: 999999999999
          format: 'int64'
          example: 1234
        totalAuthorizedAmount:
          description:
            'Specifies the monetary value of authorizations currently being held
            against the Card.'
          type: 'integer'
          minimum: 1
          maximum: 999999999999
          format: 'int64'
          example: 1234
        risk:
          $ref: '#/components/schemas/risk'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        hostReferenceId:
          $ref: '#/components/schemas/hostReferenceId'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        information:
          $ref: '#/components/schemas/information'
        merchant:
          $ref: '#/components/schemas/merchant'
        recurring:
          $ref: '#/components/schemas/recurring'
        installment:
          $ref: '#/components/schemas/installment'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        shipTo:
          $ref: '#/components/schemas/shipTo'
        retailAddenda:
          $ref: '#/components/schemas/retailAddenda'
        partialAuthorizationSupport:
          $ref: '#/components/schemas/partialAuthorizationSupport'
        transactionRoutingOverrideList:
          $ref: '#/components/schemas/transactionRoutingOverrideList'
        balanceAuthorizationAmount:
          description:
            'Specifies the monetary value of the sum requested to validate and
            ensure there are enough funds required to make a purchase. The
            amount is usually identical to the cost of the goods or services
            charged for a single transaction. It can be a smaller amount in
            cases where a transaction is split into multiple payments. It can
            also be a small amount or estimated amount to ensure the payment
            method is valid and has sufficient funds available when the final
            transaction amount is not known at authorization. In the case of a
            reversal, this represents the sum originally requested. In this
            context, this is the balanced authorized amount left on the card.'
          type: 'integer'
          format: 'int64'
          example: 12785
        partialAuthorization:
          description:
            'Indicates that the issuer has provided the merchant an
            authorization for a portion of the amount requested. This service
            provides an alternative to receiving a decline when the available
            card balance is not sufficient to approve a transaction in full.'
          type: 'boolean'
        paymentRequest:
          $ref: '#/components/schemas/paymentRequest'
        sourceAccountInformation:
          $ref: '#/components/schemas/sourceAccountInformation'
        externalOrderReferenceNumber:
          description:
            'The identifier that payment method returns after the order placed
            in their system.'
          type: 'string'
        transactionProcessor:
          $ref: '#/components/schemas/transactionProcessor'
        multiCapture:
          $ref: '#/components/schemas/multiCapture'
    paymentPatch:
      description: 'Payment Update'
      type: 'object'
      properties:
        isCapture:
          $ref: '#/components/schemas/isCapture'
        captureMethod:
          $ref: '#/components/schemas/captureMethod'
        isVoid:
          $ref: '#/components/schemas/isVoid'
        amount:
          $ref: '#/components/schemas/amount'
        isTaxable:
          $ref: '#/components/schemas/isTaxable'
        taxAmount:
          $ref: '#/components/schemas/taxAmount'
        gratuityAmount:
          $ref: '#/components/schemas/gratuityAmount'
    transactionState:
      description:
        'Codifies the current state a transaction may be in. The transaction can
        only be in one state at a time. The state is based on the current phase
        a transaction could be in. For example, a transaction that has been
        received but not captured would be in the A'
      type: 'string'
      readOnly: true
      enum:
        - 'AUTHORIZED'
        - 'VOIDED'
        - 'PENDING'
        - 'DECLINED'
        - 'COMPLETED'
        - 'CLOSED'
        - 'ERROR'
    refund:
      description: 'Input information for refund API calls'
      type: 'object'
      required:
        - 'merchant'
      properties:
        merchant:
          $ref: '#/components/schemas/merchant'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        paymentMethodType:
          $ref: '#/components/schemas/refundPaymentMethodType'
        retailAddenda:
          $ref: '#/components/schemas/retailAddenda'
    refundResponse:
      description: 'Response information for refund API calls'
      type: 'object'
      required:
        - 'requestId'
        - 'transactionState'
        - 'amount'
        - 'currency'
        - 'responseStatus'
        - 'responseCode'
        - 'responseMessage'
      properties:
        transactionId:
          $ref: '#/components/schemas/transactionId'
        requestId:
          $ref: '#/components/schemas/requestId'
        transactionState:
          $ref: '#/components/schemas/transactionState'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        responseMessage:
          $ref: '#/components/schemas/responseMessage'
        transactionReferenceId:
          $ref: '#/components/schemas/transactionReferenceId'
        remainingRefundableAmount:
          $ref: '#/components/schemas/remainingRefundableAmount'
        approvalCode:
          $ref: '#/components/schemas/approvalCode'
        hostMessage:
          $ref: '#/components/schemas/hostMessage'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        transactionDate:
          $ref: '#/components/schemas/transactionTimestamp'
        merchant:
          $ref: '#/components/schemas/merchant'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        paymentMethodType:
          $ref: '#/components/schemas/refundPaymentMethodType'
        retailAddenda:
          $ref: '#/components/schemas/retailAddenda'
        information:
          $ref: '#/components/schemas/information'
        hostReferenceId:
          $ref: '#/components/schemas/hostReferenceId'
        paymentRequest:
          $ref: '#/components/schemas/paymentRequest'
        transactionRoutingOverrideList:
          $ref: '#/components/schemas/transactionRoutingOverrideList'
    verification:
      description: 'Input verification information for API call'
      type: 'object'
      required:
        - 'merchant'
        - 'currency'
        - 'paymentMethodType'
      properties:
        merchant:
          $ref: '#/components/schemas/merchant'
        currency:
          $ref: '#/components/schemas/currency'
        paymentMethodType:
          $ref: '#/components/schemas/verificationPaymentMethodType'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        recurringSequence:
          $ref: '#/components/schemas/recurringSequence'
        websiteShortMerchantUniversalResourceLocatorText:
          description:
            "Provides textual information about data for the protocol for
            specifying addresses on the Internet (Universal Resource Locator -
            URL) for the merchant's organization."
          type: 'string'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        transactionRoutingOverrideList:
          $ref: '#/components/schemas/transactionRoutingOverrideList'
    verificationResponse:
      description: 'Response information for verification API calls'
      type: 'object'
      required:
        - 'transactionId'
        - 'requestId'
        - 'currency'
        - 'responseStatus'
        - 'responseCode'
        - 'responseMessage'
        - 'hostMessage'
        - 'paymentMethodType'
      properties:
        transactionId:
          $ref: '#/components/schemas/transactionId'
        requestId:
          $ref: '#/components/schemas/requestId'
        currency:
          $ref: '#/components/schemas/currency'
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        responseMessage:
          $ref: '#/components/schemas/responseMessage'
        hostMessage:
          $ref: '#/components/schemas/hostMessage'
        paymentMethodType:
          $ref: '#/components/schemas/verificationPaymentMethodType'
        merchant:
          $ref: '#/components/schemas/merchant'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        transactionDate:
          $ref: '#/components/schemas/transactionTimestamp'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        recurringSequence:
          $ref: '#/components/schemas/recurringSequence'
        risk:
          $ref: '#/components/schemas/risk'
        information:
          $ref: '#/components/schemas/information'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        hostReferenceId:
          $ref: '#/components/schemas/hostReferenceId'
        transactionRoutingOverrideList:
          $ref: '#/components/schemas/transactionRoutingOverrideList'
    transactionReference:
      description: 'Object for refund transaction reference'
      type: 'object'
      required:
        - 'transactionReferenceId'
      properties:
        transactionReferenceId:
          $ref: '#/components/schemas/transactionReferenceId'
    expiry:
      description: 'Expiration date'
      type: 'object'
      writeOnly: true
      required:
        - 'month'
        - 'year'
      properties:
        month:
          $ref: '#/components/schemas/month'
        year:
          $ref: '#/components/schemas/year'
    month:
      description: 'The month of the expiration date'
      type: 'integer'
      format: 'int32'
      minimum: 1
      maximum: 12
      example: 5
      writeOnly: true
    year:
      description: 'The year of the expiration date'
      type: 'integer'
      format: 'int32'
      minLength: 4
      maxLength: 4
      minimum: 2018
      maximum: 2999
      example: 2020
      writeOnly: true
    panMonth:
      description: 'The month of the expiration date'
      type: 'integer'
      format: 'int32'
      minimum: 1
      maximum: 12
      example: 5
      writeOnly: true
    panYear:
      description: 'The year of the expiration date'
      type: 'integer'
      format: 'int32'
      minLength: 4
      maxLength: 4
      minimum: 2018
      maximum: 2999
      example: 2020
      writeOnly: true
    card:
      description: 'Card payment instrument'
      type: 'object'
      required:
        - 'accountNumber'
      properties:
        accountNumberType:
          description:
            'Codifies the type of payment method account number used for the
            payment transaction.'
          type: 'string'
          enum:
            - 'PAN'
            - 'NETWORK_TOKEN'
            - 'DEVICE_TOKEN'
            - 'SAFETECH_TOKEN'
            - 'SAFETECH_ENCRYPTION'
            - 'SAFETECH_PAGE_ENCRYPTION'
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        expiry:
          $ref: '#/components/schemas/expiry'
        walletProvider:
          description:
            'Identifies the organization who manages the e-wallet for a
            consumer. The actual e-wallet management responsibilities may
            include hosting, accessing, communicating, and/or updating all or
            some of the customer data associated with the e-wallet.  An E-wallet
            is an application that is created on the mobile device to interact
            with the Point of Sale (POS) device as a catalyst for a transaction.
            This value may be sent to the Firm (as in Visa Tokenization) or
            created by the Firm.'
          type: 'string'
          enum:
            - 'APPLE_PAY'
            - 'GOOGLE_PAY'
        cardType:
          $ref: '#/components/schemas/cardType'
        cardTypeName:
          $ref: '#/components/schemas/cardTypeName'
        cvv:
          description: 'Card verification value (CVV/CV2)'
          type: 'string'
          minLength: 3
          maxLength: 6
          pattern: "^\\d{3,6}$"
          writeOnly: true
        originalNetworkTransactionId:
          $ref: '#/components/schemas/originalNetworkTransactionId'
        isBillPayment:
          $ref: '#/components/schemas/isBillPayment'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        maskedCardNumber:
          description:
            'Identifies a concealed number associated with the card number
            recognized by the Payment Networks. This is typically concealed by
            storing only the first 6 and or last 4 digits of the card number or
            some variation.'
          type: 'string'
          readOnly: true
        cardTypeIndicators:
          $ref: '#/components/schemas/cardTypeIndicators'
        accountUpdater:
          $ref: '#/components/schemas/accountUpdater'
        networkResponse:
          $ref: '#/components/schemas/networkResponse'
        authentication:
          $ref: '#/components/schemas/authentication'
        preferredPaymentNetworkNameList:
          $ref: '#/components/schemas/preferredPaymentNetworkNameList'
        merchantSalesChannelName:
          $ref: '#/components/schemas/merchantSalesChannelName'
        merchantPreferredRouting:
          $ref: '#/components/schemas/merchantPreferredRouting'
        paymentTokens:
          type: 'array'
          readOnly: true
          description: 'List of payment tokens for the transaction'
          items:
            $ref: '#/components/schemas/paymentToken'
        encryptionIntegrityCheck:
          $ref: '#/components/schemas/encryptionIntegrityCheck'
    merchant:
      description: 'Information about the merchant'
      type: 'object'
      required:
        - 'merchantSoftware'
      properties:
        merchantId:
          description: 'Identifier for the merchant account.'
          type: 'string'
          readOnly: true
          minLength: 8
          maxLength: 12
          example: '991234567890'
        merchantSoftware:
          $ref: '#/components/schemas/merchantSoftware'
        merchantCategoryCode:
          $ref: '#/components/schemas/merchantCategoryCode'
        merchantLogoUrl:
          description:
            "A reference to a web resource on the internet specifying its
            location on a computer network and a mechanism for retrieving. This
            is a pointer to a location containing the merchant's registered
            trademark  (e.g. for the Firm, the stylized CHASE followed by the
            Octagon)."
          type: 'string'
        softMerchant:
          $ref: '#/components/schemas/softMerchant'
    shipTo:
      description: 'Object containing information about the recipients'
      type: 'object'
      properties:
        shippingDescription:
          description: 'Description of shipping or delivery method'
          type: 'string'
          maxLength: 120
        shippingAddress:
          $ref: '#/components/schemas/address'
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          $ref: '#/components/schemas/email'
        mobile:
          $ref: '#/components/schemas/phone'
        phone:
          $ref: '#/components/schemas/phone'
    installment:
      description: 'Object containing information in the file'
      type: 'object'
      properties:
        installmentCount:
          $ref: '#/components/schemas/installmentCount'
        numberOfDeferrals:
          $ref: '#/components/schemas/numberOfDeferrals'
        planId:
          $ref: '#/components/schemas/planId'
    amount:
      description: 'Specifies the monetary value of the transaction performed.'
      type: 'integer'
      format: 'int64'
      minimum: 0
      maximum: 999999999999
      example: 1234
    isTaxable:
      description: 'Indicates whether tax should be collected for the item.'
      type: 'boolean'
    currency:
      description: 'Describes the currency type of the transaction'
      type: 'string'
      enum:
        - 'USD'
        - 'EUR'
        - 'GBP'
        - 'AUD'
        - 'NZD'
        - 'SGD'
        - 'CAD'
        - 'JPY'
        - 'HKD'
        - 'KRW'
        - 'TWD'
        - 'MXN'
        - 'BRL'
        - 'DKK'
        - 'NOK'
        - 'ZAR'
        - 'SEK'
        - 'CHF'
        - 'CZK'
        - 'PLN'
        - 'TRY'
        - 'AFN'
        - 'ALL'
        - 'DZD'
        - 'AOA'
        - 'ARS'
        - 'AMD'
        - 'AWG'
        - 'AZN'
        - 'BSD'
        - 'BDT'
        - 'BBD'
        - 'BYN'
        - 'BZD'
        - 'BMD'
        - 'BOB'
        - 'BAM'
        - 'BWP'
        - 'BND'
        - 'BGN'
        - 'BIF'
        - 'BTN'
        - 'XOF'
        - 'XAF'
        - 'XPF'
        - 'KHR'
        - 'CVE'
        - 'KYD'
        - 'CLP'
        - 'CNY'
        - 'COP'
        - 'KMF'
        - 'CDF'
        - 'CRC'
        - 'HRK'
        - 'DJF'
        - 'DOP'
        - 'XCD'
        - 'EGP'
        - 'ETB'
        - 'FKP'
        - 'FJD'
        - 'GMD'
        - 'GEL'
        - 'GHS'
        - 'GIP'
        - 'GTQ'
        - 'GYD'
        - 'HTG'
        - 'HNL'
        - 'HUF'
        - 'ISK'
        - 'INR'
        - 'IDR'
        - 'ILS'
        - 'JMD'
        - 'KZT'
        - 'KES'
        - 'LAK'
        - 'LBP'
        - 'LSL'
        - 'LRD'
        - 'MOP'
        - 'MKD'
        - 'MGA'
        - 'MWK'
        - 'MYR'
        - 'MVR'
        - 'MRU'
        - 'MUR'
        - 'MDL'
        - 'MNT'
        - 'MAD'
        - 'MZN'
        - 'MMK'
        - 'NAD'
        - 'NPR'
        - 'ANG'
        - 'PGK'
        - 'NIO'
        - 'NGN'
        - 'PKR'
        - 'PAB'
        - 'PYG'
        - 'PEN'
        - 'PHP'
        - 'QAR'
        - 'RON'
        - 'RWF'
        - 'SHP'
        - 'WST'
        - 'STN'
        - 'SAR'
        - 'RSD'
        - 'SCR'
        - 'SLL'
        - 'SBD'
        - 'SOS'
        - 'LKR'
        - 'SRD'
        - 'SZL'
        - 'TJS'
        - 'TZS'
        - 'THB'
        - 'TOP'
        - 'TTD'
        - 'UGX'
        - 'UAH'
        - 'AED'
        - 'UYU'
        - 'UZS'
        - 'VUV'
        - 'VND'
        - 'YER'
        - 'ZMW'
    recurringSequence:
      description:
        'Codifies the point in the recurring transaction by the consumer to the
        merchant for products or services.'
      type: 'string'
      enum:
        - 'FIRST'
        - 'SUBSEQUENT'
    initiatorType:
      description:
        'Describes the initiator of the transaction for the stored credential
        framework (MIT/CIT)'
      type: 'string'
      default: 'CARDHOLDER'
      example: 'CARDHOLDER'
      enum:
        - 'CARDHOLDER'
        - 'MERCHANT'
    accountHolderReferenceId:
      description: 'Merchant defined identifier for a consumer'
      type: 'string'
      minLength: 0
      maxLength: 25
      example: 'AB12345678'
      writeOnly: true
    electronicCommerceIndicator:
      description:
        'Describes the Electronic Commerce Indicator used in cardholder
        authentication on a network token'
      type: 'string'
      pattern: "^\\d{1,2}$"
      example: '05'
    transactionId:
      description: 'Identifier of a resource'
      type: 'string'
      minLength: 4
      maxLength: 40
      example: '5a4c3500-4017-11e9-b649-8de064224186'
    originalNetworkTransactionId:
      description:
        'Reference to a previous transaction. For merchant initiated
        transactions (MIT), the network transaction identifier from the original
        transaction must be sent in this field.'
      type: 'string'
      minLength: 4
      maxLength: 40
      example: '1c4b1100-4017-11e9-b649-8de064224186'
    transactionReferenceId:
      description: 'Reference to an existing payment.'
      type: 'string'
      minLength: 4
      maxLength: 40
      example: '6b4c7800-4017-11e9-b649-8de064224186'
    responseCode:
      description: 'Short explanation for response status'
      type: 'string'
      minLength: 2
      maxLength: 50
    responseMessage:
      description: 'Long explanation of response code'
      type: 'string'
    '3dsCode':
      description: '3-D Secure authentication response code'
      type: 'string'
      readOnly: true
      minLength: 1
      maxLength: 50
    '3dsMessage':
      description: '3-D Secure authentication response message'
      type: 'string'
      readOnly: true
    resultCode:
      description: 'Token result code'
      type: 'string'
      readOnly: true
      minLength: 2
      maxLength: 50
    resultMessage:
      description: 'Token result message'
      type: 'string'
    approvalCode:
      description: 'Approval code provided by the payment issuer'
      type: 'string'
      readOnly: true
      maxLength: 50
      example: '54321'
    networkResponse:
      description: 'Response information from payment network'
      type: 'object'
      readOnly: true
      properties:
        addressVerificationResult:
          description:
            'Indicates if address provided matches the billing address'
          type: 'string'
          readOnly: true
          enum:
            - 'ADDRESS_MATCH'
            - 'ADDRESS_POSTALCODE_MATCH'
            - 'NAME_ADDRESS_MATCH'
            - 'NAME_MATCH'
            - 'NAME_POSTALCODE_MATCH'
            - 'NO_MATCH'
            - 'NOT_AVAILABLE'
            - 'NOT_REQUESTED'
            - 'NOT_VERIFIED'
            - 'POSTALCODE_MATCH'
            - 'SERVICE_NOT_AVAILABLE_RETRY'
            - 'SERVICE_NOT_SUPPORTED'
        addressVerificationResultCode:
          description:
            'Codifies authentication of the address related to the payment card
            account at the transaction location during the authorization phase
            of a payment transaction(e.g. Z = zip code match, A = address
            match).'
          type: 'string'
        additionalData:
          $ref: '#/components/schemas/additionalData'
        banknetReferenceNumber:
          description:
            'Identifies the number assigned by MasterCard to each authorization
            message between a card acceptor and an issuer.'
          type: 'string'
        cardVerificationResult:
          description:
            'Indicates if the card verification values (CVV/CV2) matches'
          type: 'string'
          readOnly: true
          enum:
            - 'MATCH'
            - 'NOT_PRESENT'
            - 'NOT_PROCESSED'
            - 'NOT_SUPPORTED'
            - 'NO_MATCH'
        cardVerificationResultCode:
          description:
            'Codifies the results of the cardholder authentication match test
            within the processor.  Authentication test is based on whether the
            MasterCard Card Verification Character (CVC) or the Visa Card
            Verification Value (CVV) presented with the transaction matches what
            the Firm has on file for the card account (e.g., M = CVV2 matched, N
            = CVV2 did not match).'
          type: 'string'
        emailVerificationResult:
          description:
            "Provides the textual detail information of the issuer's
            authorization response code to a merchant when verifying the
            cardholder's email address to help authenticate transactions and
            prevent fraud. This is Amex only field."
          type: 'string'
          enum:
            - 'MATCH'
            - 'NO_MATCH'
            - 'NOT_VERIFIED'
            - 'SERVICE_NOT_AVAILABLE_RETRY'
            - 'SERVICE_NOT_SUPPORTED'
        emailVerificationResultCode:
          description:
            "Codifies the issuer's authorization response code to a merchant
            when verifying the cardholder's email address to help authenticate
            transactions and prevent fraud.This is Amex only field."
          type: 'string'
        last4CardNumber:
          description: 'Masked Card Number'
          type: 'string'
        networkTransactionId:
          description:
            'A unique identifier for the transaction returned by the issuer. For
            Mastercard, this includes the    BanknetReferenceNumber.'
          type: 'string'
          readOnly: true
        networkAccountUpdater:
          $ref: '#/components/schemas/networkResponseAccountUpdater'
        paymentAccountReference:
          $ref: '#/components/schemas/par'
        phoneVerificationResult:
          description:
            "Codifies the issuer's authorization response code to a merchant
            when verifying the cardholder's billing telephone number to help
            authenticate transactions and prevent fraud. This is Amex only
            field."
          type: 'string'
          enum:
            - 'MATCH'
            - 'NO_MATCH'
            - 'NOT_VERIFIED'
            - 'SERVICE_NOT_AVAILABLE_RETRY'
            - 'SERVICE_NOT_SUPPORTED'
        phoneVerificationResultCode:
          description:
            "Provides the textual detail information of the issuer's
            authorization response code to a merchant when verifying the
            cardholder's billing telephone number to help authenticate
            transactions and prevent fraud.This is Amex only field."
          type: 'string'
        tokenRequestorIdentifier:
          description:
            'Identifier for the merchant given by the token requestor'
          type: 'string'
          example: '98765432101'
        tokenAssuranceScore:
          description: 'Indicates assurance level associated with the token'
          type: 'string'
          readOnly: true
          example: '0'
        tokenStatus:
          description:
            'Indicates the status of the token. For Visa - A= Active for
            payment, I = Inactive for payment, S= Temporarily suspended for
            payments, D = Permanently deactivated for payments.'
          type: 'string'
          readOnly: true
          example: 'A'
        debitTraceNumber:
          description:
            'Identifies a reference number generated at transaction time.'
          type: 'string'
          readOnly: true
    networkResponseAccountUpdater:
      description: 'Account update information as returned by the network'
      type: 'object'
      properties:
        accountStatus:
          description:
            'Contains response information related to Account Updater request'
          type: 'string'
          readOnly: true
          enum:
            - 'A'
            - 'C'
            - 'E'
            - 'Q'
        replacementCode:
          description:
            'Indicates if replacement of any information has occurred'
          type: 'boolean'
          readOnly: true
        networkResponseCode:
          description: 'Network provided error or reason code'
          type: 'string'
          readOnly: true
    additionalData:
      description: 'Addition information receives from payment network.'
      type: 'object'
      properties:
        acquirerReferenceNumber:
          description:
            'Contains identifier generated by the acquirer.  For Visa, this is
            the ARN.  For Mastercard, this is the ARD.'
          type: 'string'
          readOnly: true
          maxLength: 30
          example: '1234567890123456'
        acquirerName:
          description:
            'The label of the entity acting as the acquiring bank through the
            payment processing network during settlement to the cardholders bank
            (the issuer). This may be different from Firm in Gateway solution
            such as Stone and Elavon.'
          type: 'string'
        authorizationDate:
          description:
            "'The local date, in MMDD format, on which the transaction occurred'"
          type: 'string'
          readOnly: true
        downgradeReasonCode:
          $ref: '#/components/schemas/downgradeReasonCode'
        electronicCommerceSecurityLevelCode:
          description:
            'Contains the electronic commerce indicators representing the
            security level and cardholder authentication associated with the
            transaction.'
          type: 'string'
          readOnly: true
        electronicCommerceIndicator:
          $ref: '#/components/schemas/electronicCommerceIndicator'
        marketSpecificData:
          description:
            "Codifies Visa's classification of the merchant's industry provided
            at the time of the authorization."
          type: 'string'
          readOnly: true
        merchantAdviceCode:
          description:
            'Codifies the reason for declining a MasterCard and Visa recurring
            payment transaction and the actions merchants can take to continue
            to serve their recurring payment customers.  Valid values:  01 ? New
            account information available. Obtain new accoun'
          type: 'string'
          readOnly: true
        originalElectronicCommerceIndicator:
          description:
            'Contains the original UCAF Collection Indicator sent by the
            acquirer in the Authorization Request message before the Identity
            Check downgrade or MDES SLI modification occurred.'
          type: 'string'
          readOnly: true
        originalElectronicCommerceSecurityLevelCode:
          description:
            'Contains the original Security Level Indicators sent by the
            acquirer in the Authorization Request message before the Identity
            Check downgrade or MDES SLI modification occurred.'
          type: 'string'
          readOnly: true
        processingCode:
          description:
            'Codifies a constructed data element that is composed of three
            fields:  1. Transaction type code - describes the specific
            transaction type;  2. Account type code 1 - describes the account
            type affected for debits ("from");  3. Account type code 2 -
            describes the account type affected for credits ("to").  Aligns to
            ISO 8583 field 3.'
          type: 'string'
          readOnly: true
        productId:
          description:
            'Codifies issuer-supplied value assigned by Mastercard and Visa user
            to track card-level activity by card account number.  Sample Visa
            values: A - Visa Traditional/NA C - Visa Signature I - Visa Commerce
            L - Visa Corporate  Sample MasterCard values: MCF - MasterCard Fleet
            Card MCW - World MasterCard MDS - Debit MasterCard MCO - MasterCard
            Corporate'
          type: 'string'
          readOnly: true
        posConditionCode:
          description:
            'Codifies additional information for the conditions present when the
            authorization occurred. Examples include Normal Transaction, Card
            Not Present, Suspicious Transaction.'
          type: 'string'
          readOnly: true
        posEntryModeChanged:
          description:
            'If the entry mode has changed, the Issuer will respond with the
            1-byte POS Entry Mode Change (Y)'
          type: 'boolean'
          readOnly: true
        posEnvironment:
          description:
            'Codifies th type of periodic billing that the cardholder and
            merchant have agreed for goods and services, such as utility bills
            and magazines, or Installment payments. The value in this field
            indicates that the message is being used for an installment payment.
            Possible values are: Space - default R - Recurring Payment
            Transaction I - Installment Payment C - Credential on File'
          type: 'string'
          readOnly: true
        posEntryMode:
          description:
            'Codifies how payment information is captured during the exchange of
            goods and services at the time of purchase.'
          type: 'string'
          readOnly: true
        retrievalReferenceNumber:
          description:
            'Identifies a unique number assigned to each transaction by the
            merchant acquiring host and must be used to perform a void
            transaction.'
          type: 'string'
          readOnly: true
        returnAci:
          description:
            'Codifies the information regarding the authorization that is
            important to the identification of the actions taken at the time of
            the authorization to reduce fraud.'
          type: 'string'
          readOnly: true
        responseReasonCode:
          description:
            'Codifies the source that approved or declined the authorization
            request of a transaction sent to the payment network association.'
          type: 'string'
          readOnly: true
        systemTraceAuditNumber:
          description:
            'The System Trace Audit Number (STAN) is assigned by a transaction
            originator to assist in identifying a card transaction. The STAN
            remains unchanged for the life of the card transaction.'
          type: 'string'
          readOnly: true
        validationCode:
          description:
            "CAVV Verification Service enables issuers or VisaNet to validate
            cardholders' CAVVs resulting from issuers' authentication decisions
            during online Verified by Visa (VbV) purchase sessions.
            Authentication requests occur when merchants, acquirers, and ssuers
            participate in VbV. CAVV validation results are in request and
            response. Field 44.13 contains CAVV validation code. If V.I.P.
            performs validation, result code is in request V.I.P.forwards to
            issuer for approval decision. If issuer performs validation, CAVV
            validation result code is in response."
          type: 'string'
          readOnly: true
    address:
      description: 'Address Object'
      type: 'object'
      writeOnly: true
      properties:
        line1:
          description:
            "A portion of a party's address which is the line of the
            unstructured (unparsed) geographic street address containing any of
            the following: house number, street name, street direction, street
            type, dwelling type and number, PO Box number, rural delivery route
            number."
          type: 'string'
          maxLength: 40
          pattern: '^[^<>{}]*$'
          example: '123 Some Street'
        line2:
          description:
            "A portion of a party's address which is the line of the
            unstructured (unparsed) geographic street address containing any of
            the following: house number, street name, street direction, street
            type, dwelling type and number, PO Box number, rural delivery route
            number."
          type: 'string'
          maxLength: 40
          pattern: '^[^<>{}]*$'
          example: 'Apartment 3b'
        city:
          description:
            "A portion of a party's address which is the geographic area that is
            a municipality with legal power granted by a state/province charter."
          type: 'string'
          maxLength: 40
          pattern: "[\\p{L}'. ]*"
          example: 'Nowhere'
        state:
          description:
            'Classifies a geographic area that represents a first level, legal
            and political subdivision of a country; for example, Virginia,
            Bavaria.'
          type: 'string'
          minLength: 2
          maxLength: 3
          pattern: '[A-Za-z]*'
          example: 'FL'
        postalCode:
          description:
            'The portion of a party?s address that is the encoded representation
            of a geographic area to facilitate mail delivery services.'
          type: 'string'
          minLength: 3
          maxLength: 12
          pattern: "^[a-zA-Z0-9]+(-|\\s?)[a-zA-Z0-9]+$"
          example: '99999'
        countryCode:
          description:
            'A code that identifies the Country, a Geographic Area, that is
            recognized as an independent political unit in world affairs. Note:
            This data element is a child of the Country Code CDE and valid
            values are based on ISO standards.'
          type: 'string'
          maxLength: 3
          format: '^[A-Za-z]*$'
          example: 'USA'
    responseStatus:
      description:
        "The label given to the state of a response to a request submitted by a
        consumer through the Firm's Application Program Interface (API) that
        matches a test case. Valid Values: ERROR,SUCCESS, DENIED"
      type: 'string'
      enum:
        - 'SUCCESS'
        - 'DENIED'
        - 'ERROR'
    messages:
      description: 'A list of errors and warnings.'
      type: 'object'
      required:
        - 'responseStatus'
        - 'responseCode'
      properties:
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        responseMessage:
          $ref: '#/components/schemas/responseMessage'
        validationErrors:
          type: 'array'
          description:
            'Information about errors occurred in transaction validation'
          items:
            $ref: '#/components/schemas/validationMessage'
        information:
          $ref: '#/components/schemas/information'
    information:
      description: 'A list of informational messages'
      type: 'object'
      properties:
        code:
          description: 'Codifies the instruction provided in the application'
          type: 'string'
          maxLength: 40
        message:
          description:
            'Long explanation of the instruction provided in the application'
          type: 'string'
          maxLength: 120
    purchaseOrderNumber:
      description: 'The Purchase Order Number'
      type: 'string'
      pattern: "^[A-Za-z0-9.$@&amp;/\\\\-]*$"
      maxLength: 17
    merchantCategoryCode:
      description: 'MCC or Merchant Category Code'
      type: 'string'
      pattern: "^\\d{4}$"
      minLength: 4
      maxLength: 4
      example: '4819'
    agreementId:
      description:
        'System generated value used to uniquely identify a set of statements
        presented to the customer whom has acknowledged the acceptance in order
        to use the online systems.'
      type: 'string'
      minLength: 1
      maxLength: 100
    paymentAgreementExpiryDate:
      description:
        'Designates the year (YYYY), month (MM), and day (D) at which the
        agreement with the payer to process payments expires. Used with
        recurring transaction.'
      type: 'string'
      format: 'date'
      example: '2020-09-20'
    email:
      description: 'Optional value for merchants to provide for a transaction'
      type: 'string'
      minLength: 6
      maxLength: 60
      example: 'john.doe@email.xyz'
      writeOnly: true
    cardTypeIndicators:
      description:
        'The card type indicators provide additional information about the card.
        For example, if the card is a prepaid card and thus less likely
        to         support recurring payments or if the card is a healthcare or
        commercial  card.'
      type: 'object'
      readOnly: true
      properties:
        issuanceCountryCode:
          $ref: '#/components/schemas/countryCodeText'
        isLevel3Eligible:
          description: 'Whether the card is eligible for Level 3 fields'
          type: 'boolean'
          readOnly: true
        cardTypeCategory:
          $ref: '#/components/schemas/paymentBrandCardTypeCode'
        cardIssuerName:
          $ref: '#/components/schemas/cardIssuerName'
        isDurbinRegulated:
          description:
            'Whether the card is regulated as per the Durbin Amendment'
          type: 'boolean'
          readOnly: true
        cardProductName:
          $ref: '#/components/schemas/cardProductName'
        cardProductTypes:
          type: 'array'
          description:
            'List of card products applicable for the account number.'
          items:
            type: 'string'
            enum:
              - 'COMMERCIAL'
              - 'PAYROLL'
              - 'HEALTHCARE'
              - 'AFFLUENT_CATEGORY'
              - 'SIGNATURE_DEBIT'
              - 'PINLESS_DEBIT'
              - 'PREPAID_RELOADABLE'
    maskedAccountNumber:
      description:
        'Identifies a concealed number associated with the card number
        recognized by various payment systems. This is typically concealed by
        storing only the first 6 and/or last 4 digits of the payment account
        number or some variation.'
      type: 'string'
      readOnly: true
      example: '123456XXXXXX9876'
    authenticationValue:
      description:
        'Base 64 encoded cryptogram received during authorization to verify that
        the integrity of data contained within a payment request matches what
        was originally authorized during authentication. This field is
        specifically used for card authorizations.'
      type: 'string'
      format: 'base64'
      maxLength: 56
      writeOnly: true
    authentication:
      description:
        'The authentication object allows you to opt in to additional security
        features like 3-D Secure'
      type: 'object'
      properties:
        threeDS:
          $ref: '#/components/schemas/threeDS'
        electronicCommerceIndicator:
          $ref: '#/components/schemas/electronicCommerceIndicator'
        authenticationValueResponse:
          $ref: '#/components/schemas/authenticationValueResponse'
        tokenAuthenticationResult:
          $ref: '#/components/schemas/tokenAuthenticationResult'
        tokenAuthenticationValue:
          description:
            'Contains authentication value received from Payment Networks for
            network token transactions'
          type: 'string'
          maxLength: 40
          format: 'base64'
          writeOnly: true
        SCAExemptionReason:
          description:
            'Codifies the justification why a transaction does not have to meet
            Strong Customer Authentication (SCA) requirements. SCA is a
            regulatory requirement to reduce fraud and make online payments more
            secure via two-factor authentication; an authentication based on the
            use of two or more elements categorized as knowledge (something only
            the user knows), possession (something only the user possesses) or
            inherence (something the user is).'
          type: 'string'
          enum:
            - 'TRUSTED_MERCHANT'
            - 'SECURE_CORPORATE_PAYMENT'
            - 'TRANSACTION_RISK_ANALYSIS'
            - 'LOW_VALUE_PAYMENT'
            - 'MERCHANT_INITIATED_TRANSACTION'
            - 'RECURRING_PAYMENT'
            - 'SCA_DELEGATION'
    threeDS:
      description:
        'Contains information about payer authentication using 3-D Secure
        authentication'
      type: 'object'
      properties:
        authenticationValue:
          $ref: '#/components/schemas/authenticationValue'
        authenticationTransactionId:
          description:
            'Identifier provided by the merchant plug in system (MPI) or scheme
            directory server during payer authentication using 3-D Secure
            authentication.'
          type: 'string'
        threeDSProgramProtocol:
          description:
            'Indicates 3-D Secure program protocol used in the transaction.'
          type: 'string'
          minLength: 0
          maxLength: 20
          example: '2'
        version1:
          $ref: '#/components/schemas/version1'
        version2:
          $ref: '#/components/schemas/version2'
    version1:
      description:
        'Contains information about payer authentication using 3-D Secure
        authentication version 1'
      type: 'object'
      properties:
        threeDSVEResEnrolled:
          description:
            "Contains value returned in the 'enrolled' field of the Verify
            Enrollment Response (VERes) message from the card scheme's Directory
            Server. Y=Authentication successful;  N=Authentication failed;
            U=Authentication unavailable;  A=Attempted authentication"
          type: 'string'
          enum:
            - 'Y'
            - 'N'
            - 'U'
            - 'A'
        threeDSPAResStatus:
          description:
            "Contains value returned in the transaction status field of the
            Payer Authentication Response (PARes) message from the card Issuer's
            Access Control Server (ACS). Y=Authentication successful ;
            N=Authentication failed ; U=Authentication unavailable ; A=Attempted
            authentication"
          type: 'string'
          enum:
            - 'Y'
            - 'N'
            - 'U'
            - 'A'
    version2:
      description:
        'Contains information about payer authentication using 3-D Secure
        authentication version 2'
      type: 'object'
      properties:
        threeDSTransactionStatus:
          description:
            'Contains value returned in Authentication Response Message (ARes).
            Y=Authentication successful ; N=Authentication failed ;
            U=Authentication unavailable ; A=Attempted authentication ;'
          type: 'string'
          enum:
            - 'Y'
            - 'N'
            - 'U'
            - 'A'
        threeDSTransactionStatusReasonCode:
          description:
            'Contains code indicating the reason for the transaction status in
            threeDSTransactionStatus.'
          type: 'string'
          maxLength: 2
          example: '01'
    transactionTimestamp:
      description:
        'Designates the hour, minute, seconds and date (if timestamp) or year,
        month, and date (if date) when the transaction (monetary or
        non-monetary) occurred.'
      type: 'string'
    timestampReturned:
      description:
        'Provides a timestamp (UTC). Designates the hour (hh), minute (mm),
        seconds (ss) and date (if timestamp) or year (YYYY), month (MM), and day
        (DD) (if date)'
      type: 'string'
      readOnly: true
      example: '2018-12-21T09:30:15.987Z'
    requestId:
      description:
        'Merchant identifier for the request. The value must be unique.'
      type: 'string'
      maxLength: 40
      example: '10cc0270-7bed-11e9-a188-1763956dd7f6'
    statementDescriptor:
      description:
        'Provides textual information about charges or payments on statements.
        Using clear and accurate statement descriptors can reduce chargebacks
        and disputes.'
      type: 'string'
      minLength: 4
      maxLength: 100
    ipAddress:
      description: 'IP Address from where the transaction is originating'
      type: 'string'
      minLength: 0
      maxLength: 40
      example: '127.0.0.1'
      writeOnly: true
    merchantReturnUrl:
      description:
        'A reference to a web resource on the internet specifying its location
        on a computer network and a mechanism for retrieving.  In this context,
        this is the returned URL after payment process completion.'
      type: 'string'
      readOnly: true
      minLength: 0
      maxLength: 120
      example: 'https://www.merchantecommerce.test'
    redirectUrl:
      description:
        "Information on where consumer needs to be redirected for payment
        process completion. Ensure that the URL begins with 'https'"
      type: 'string'
      readOnly: true
      minLength: 0
      maxLength: 120
      example: 'https://www.examplebank.test/authentication'
    qrCodeUrl:
      description:
        "Information on where consumer needs to be redirected for payment
        process completion. Ensure that the URL begins with either 'http' or
        'https'"
      type: 'string'
      readOnly: true
      minLength: 0
      maxLength: 120
    barcodeUrl:
      description:
        'A reference to a web resource on the internet specifying its location
        on a computer network and a mechanism for retrieving.  In this context,
        this is the URL provided by merchant for the barcode. Customer can
        complete the transaction by paying the transaction amount using barcode
        from the link.'
      type: 'string'
      readOnly: true
      minLength: 0
      maxLength: 120
      example: 'https://apac-api.merchant.jpmorgan.com/v1/payments/transactions/tran_DELdydqcVH5vq/barcode'
    pdfUrl:
      description:
        'A reference to a web resource on the internet specifying its location
        on a computer network and a mechanism for retrieving.  In this context,
        this is the URL provided by merchant for the payment document in PDF
        format. The document contain payment instruction to pay at store to
        complete the transaction.'
      type: 'string'
      readOnly: true
      minLength: 0
      maxLength: 120
      example: 'https://apac-api.merchant.jpmorgan.com/v1/payments/transactions/tran_DELdydqcVH5vq/pdf'
    processorStatus:
      description:
        'Codifies the state of the payment status from the payment processor.
        Examples include COMPLETED ,PAID, OVERPAID,ERRORED'
      type: 'string'
      readOnly: true
      enum:
        - 'INITIATED'
        - 'COMPLETED'
        - 'REDIRECTED'
        - 'RETURNED'
        - 'UNDERPAID'
        - 'OVERPAID'
        - 'PAID'
        - 'VOIDED'
        - 'ERROR'
        - 'EXPIRED'
    paidAmount:
      description: 'Actual amount paid.'
      type: 'string'
    paidDate:
      description: 'Date and time in which the voucher or ticket was paid.'
      type: 'string'
      example: '2018-12-21T09:30:15.987Z'
    risk:
      description: 'Response information for transactions'
      type: 'object'
      properties:
        requestFraudScore:
          description:
            'Indicates the true/false value of whether or not the transaction
            need to be assessed for fraud check.'
          type: 'boolean'
        transactionRiskScore:
          $ref: '#/components/schemas/transactionRiskScore'
        tokenRiskScore:
          $ref: '#/components/schemas/tokenRiskScore'
        riskReasonCode:
          description:
            'Codifies adverse action reason associated with the Risk Index Score
            for the transaction. This reason can be given with a adverse
            decision made using the Risk Index Score.'
          type: 'string'
          readOnly: true
          minLength: 0
          maxLength: 3
          example: '9'
    transactionRiskScore:
      description: 'Risk score for transaction'
      type: 'integer'
      minimum: 0
      maximum: 100
      example: 42
    tokenRiskScore:
      description: 'Risk score for token'
      type: 'integer'
      minimum: 0
      maximum: 100
      example: 42
    par:
      description:
        'A unique identifier associated with a specific cardholder primary
        account number (PAN) used to link a payment account represented by that
        PAN to affiliated payment tokens. This 29 character identification
        number can be used in place of sensitive consumer identification fields,
        and transmitted across the payments ecosystem to facilitate consumer
        identification.'
      type: 'string'
      minLength: 0
      maxLength: 29
      example: 'VI019876543210987654321098765'
    authenticationValueResponse:
      description:
        'Returned when more information about authentication is received from
        the  network'
      type: 'object'
      readOnly: true
      properties:
        code:
          $ref: '#/components/schemas/3dsCode'
        message:
          $ref: '#/components/schemas/3dsMessage'
    hostMessage:
      description:
        'Message received from Issuer, network or processor. Can be blank'
      type: 'string'
    phone:
      description:
        'Phone number in ITU-T E.164 format. Country code and phone number
        (subscriber number) are mandatory values'
      type: 'object'
      writeOnly: true
      required:
        - 'phoneNumber'
      properties:
        countryCode:
          description:
            'The telephone dialing prefix for a member country in the
            International Telecommunication Union (ITU) that is defined by the
            ITU-T E.164 standard. The code is a combination of one, two or three
            digits identifying a specific country, countries in an integrated
            numbering plan, or a specific geographic area.'
          type: 'integer'
          minimum: 1
          maximum: 999
          example: 1
        phoneNumber:
          description:
            'A locator whose value identifies the formatted numeric address for
            routing voice or data communications via telephony, to reach a
            party. NOTE: Telephone number formats may vary; this field can
            include domestic and international telephone numbers.'
          type: 'string'
          maxLength: 12
          writeOnly: true
    validationMessage:
      description: 'Object containing information about transaction validation'
      type: 'object'
      properties:
        code:
          $ref: '#/components/schemas/code'
        message:
          $ref: '#/components/schemas/message'
        entity:
          $ref: '#/components/schemas/entity'
    code:
      description: 'Short informative code about error'
      type: 'string'
    message:
      description: 'Long informative message about error'
      type: 'string'
    entity:
      description:
        'The moniker given to the module or program where the error generated.'
      type: 'string'
    merchantSoftware:
      description: 'Contains information related to the merchant software'
      type: 'object'
      required:
        - 'companyName'
        - 'productName'
      properties:
        companyName:
          description:
            'The label given to a formally organized or incorporated firm known
            as a legal entity. In this context, this is the company a merchant
            is sourcing its payment processing software from.'
          type: 'string'
          maxLength: 256
          pattern: '^[^<>{}]*$'
          example: 'Payment Company'
        productName:
          description:
            'The name of the product used for marketing purposes from a customer
            perspective. I. e. what the customer would recognize.'
          type: 'string'
          maxLength: 256
          pattern: '^[^<>{}]*$'
          example: 'Application Name'
        version:
          description:
            'Designates the unique state of computer software as it is developed
            and released. The version identifier can be a word, or a number, or
            both.'
          type: 'string'
          maxLength: 50
          pattern: '^[^<>{}]*$'
          example: '1.235'
    panExpiry:
      description: 'Contains expiry for masked PAN if received from network'
      type: 'object'
      readOnly: true
      properties:
        month:
          $ref: '#/components/schemas/panMonth'
        year:
          $ref: '#/components/schemas/panYear'
    accountOnFile:
      description:
        'The label given to indicate if the account number is stored, not
        stored, or is going to be stored by a merchant. Valid values: STORED
        NOT_STORED TO_BE_STORED'
      type: 'string'
      default: 'NOT_STORED'
      example: 'NOT_STORED'
      enum:
        - 'NOT_STORED'
        - 'STORED'
        - 'TO_BE_STORED'
    isAmountFinal:
      description: 'Indicates if the amount is final and will not change'
      type: 'boolean'
    installmentCount:
      description:
        'Measures the number of recurring payments expected to be made by the
        customer over a scheduled period of time in order to pay the total
        amount charged.'
      type: 'integer'
      minimum: 1
      maximum: 99
    numberOfDeferrals:
      description:
        'Specifies the number of month an installment payment can be postponed
        or suspended.'
      type: 'integer'
      minimum: 0
      maximum: 99
    planId:
      description: 'Contains the payment plan identifier.'
      type: 'string'
      maxLength: 50
      example: 'BANORTE_WITHOUT_INTEREST'
    cardTypeName:
      description: 'Card name'
      type: 'string'
      readOnly: true
      maxLength: 40
      example: 'VISA'
      enum:
        - 'VISA'
        - 'MASTERCARD'
        - 'AMERICAN_EXPRESS'
        - 'HIPERCARD'
        - 'ELO'
        - 'DISCOVER'
        - 'JCB'
        - 'DINERS_CLUB'
        - 'CHINA_UNION_PAY'
        - 'CHASENET_CREDIT'
        - 'CHASENET_SIGNATURE_DEBIT'
        - 'OXXO'
        - 'INTERNATIONAL_MAESTRO'
    cardType:
      description: 'Abbreviation of card name'
      type: 'string'
      readOnly: true
      maxLength: 10
      example: 'VI'
      enum:
        - 'VI'
        - 'MC'
        - 'AX'
        - 'HC'
        - 'EO'
        - 'DI'
        - 'JC'
        - 'DC'
        - 'CC'
        - 'CZ'
        - 'CR'
        - 'OX'
        - 'IM'
    healthCheckResource:
      description: 'Contains health check information about a resource'
      type: 'object'
      properties:
        status:
          description: 'General status of all resources'
          type: 'string'
          enum:
            - 'PASS'
            - 'FAIL'
            - 'WARN'
          example: 'PASS'
    dueDate:
      description: 'Date payment is due by'
      type: 'string'
      format: 'date'
      example: '2020-09-20'
    boleto:
      description: 'Boleto payment information'
      type: 'object'
      required:
        - 'bankCode'
        - 'type'
        - 'uniqueNumber'
        - 'dueDate'
        - 'paidAmount'
        - 'paidDate'
        - 'documentNumber'
        - 'ticketInstructions'
      properties:
        bankCode:
          description: 'Indicates the bank issuing the Boleto'
          type: 'string'
          enum:
            - 'JPM'
        type:
          description:
            'Boleto type of Duplicata Mercantil or Boleto de Proposta'
          type: 'string'
          enum:
            - 'DM'
            - 'BDP'
        uniqueNumber:
          description: 'Number that uniquely identifies a Boleto for an account'
          type: 'string'
          minLength: 1
          maxLength: 120
        dueDate:
          $ref: '#/components/schemas/dueDate'
        paidAmount:
          $ref: '#/components/schemas/paidAmount'
        paidDate:
          $ref: '#/components/schemas/paidDate'
        documentNumber:
          description: 'Ticket identifier'
          type: 'string'
          minLength: 1
          maxLength: 16
        ticketInstructions:
          description: 'Ticket instructions'
          type: 'string'
          minLength: 1
          maxLength: 256
          example: 'Pay to maturity'
        redirectUrl:
          $ref: '#/components/schemas/redirectUrl'
        qrCodeUrl:
          $ref: '#/components/schemas/qrCodeUrl'
        barcodeUrl:
          $ref: '#/components/schemas/barcodeUrl'
        pdfUrl:
          $ref: '#/components/schemas/pdfUrl'
        status:
          $ref: '#/components/schemas/processorStatus'
        expiryDate:
          description:
            'Designates the year, month, and day in which the Convenience Store
            Payment document will no longer be recognized as a valid payment
            document to be utilized at the convenience store.'
          type: 'string'
          format: 'date'
          example: '2020-09-20'
    encryptedPaymentHeader:
      description:
        'header information for Encrypted Data from ApplePay or GooglePay'
      type: 'object'
      properties:
        ephemeralPublicKey:
          description:
            'Provides textual information about a cipher key for exchanging data
            via an associated string or byte image. This is a public key
            generated by the merchant and shared with Firm. In this context,
            this key is called ephemeral for its short life span.'
          type: 'string'
        publicKeyHash:
          description:
            'This is the hash output using a hash function for the Ephemeral
            Public Key.'
          type: 'string'
          example: 'MUwkjyUBpyRiZTVMUrIzA6+SIrr9mV8nNct6YO0rGNg='
    encryptedPaymentBundle:
      description: 'Encrypted Data from ApplePay or GooglePay'
      type: 'object'
      writeOnly: true
      properties:
        encryptedPaymentHeader:
          $ref: '#/components/schemas/encryptedPaymentHeader'
        protocolVersion:
          description:
            'Identifies a unique variation of an application based on
            developments or updates to an existing model for the software
            (a.k.a. Versioning). Version assignments typically include a major
            and minor category, assigned in an increasing order aligned with the
            software release dates.  In this context, this is the version number
            of Elliptic Curve Cryptography (ECC) which is akey-based technique
            for encrypting data. ECC focuses on pairs of public and private keys
            for decryption and encryption of web traffic.'
          type: 'string'
        signature:
          description:
            "This is the virtual signature data of the payment and header data.
            The signature information let the receiver know that the data is
            indeed sent by the sender. The signature is created using sender's
            key pair."
          type: 'string'
        encryptedPayload:
          description:
            'The message body of a transmitted message containing the actual
            data for a specific purpose. This is the essential data that is
            being carried within a packet or other transmitted unit.  In this
            context, the message details have been rendered unreadable by
            general means through the application of a given set of instructions
            and a key.'
          type: 'string'
          example: 'IzxSm6YWehmlLvk5HY/rsl4hhWuorOG7R6ERP0fqzTokMhS5JtyAU8ajPIu/aHcbOxYQOhvk/K+3n6N7SbEKgSuT100YFmeIKh3IkSLa4u1/1Y4Z9y5bqZFPxd8IcQnuR8HZKgJDHCXQzDDYP4JBMtqZQzRztzsIfa4eoOnGuZCc2s+WxGap4iv92vPj8tAHonvSE9t0ByUCBLgfvu25GR0eJb6UM8nBvxP2/qBSElOuyLo80enrZ6tlp3xtpBEV8oeOc9iLSmalayfD7JQxZXd2cWA/sZPWn4VGIj7Dt05NYE/iFZrw2VOa2hOJ4/4dOGS1KJzhw+RPRufhadAF96k7O3LwbMphcM9sZLN/Y/LSqVFGzIq6ZlrnOwcxzvjNqw4ccNl4v3eehL4TRRgfF3LirV56BeADzJmq0pB3W/vu'
    applepay:
      description:
        'Use is for encrypted bundles for web or Internet acceptance of digital
        device wallets such as Apple Pay'
      type: 'object'
      properties:
        latLong:
          $ref: '#/components/schemas/latLong'
        encryptedPaymentBundle:
          $ref: '#/components/schemas/encryptedPaymentBundle'
    latLong:
      description:
        'Identifies the latitude and longitude coordinates of the digital device
        when it is being provisioned. Information is expressed in the order of
        latitude then longitude with values rounded to the nearest whole digit.'
      type: 'string'
      minLength: 3
      maxLength: 21
      example: '1,1'
    googlepay:
      description:
        'Use is for encrypted bundles for web or Internet acceptance of digital
        device wallets such as Google Pay'
      type: 'object'
      properties:
        latLong:
          $ref: '#/components/schemas/latLong'
        encryptedPaymentBundle:
          $ref: '#/components/schemas/encryptedPaymentBundle'
    fullName:
      description: 'Name of accountholder'
      type: 'string'
      pattern: "[A-Za-z''. ]*"
      minLength: 4
      maxLength: 70
      example: 'Jane Doe'
      writeOnly: true
    accountHolderNationalId:
      description:
        'An identifier for the consumer or business assigned by a government
        authority.'
      type: 'string'
      minLength: 1
      maxLength: 30
      writeOnly: true
    fundingStatus:
      description: 'Specifies the funding status of the transaction'
      type: 'string'
      readOnly: true
    isVoid:
      description: 'Void a payment'
      type: 'boolean'
      example: false
    preferredLanguage:
      description:
        'Language preference indicated by consumer for pages displayed. Using
        language tags indicated in RFC5646.'
      type: 'string'
      minLength: 2
      maxLength: 36
    requestAccountUpdater:
      description:
        'Enrolled merchants may request real-time Account Updater service by
        indicating TRUE for eligible recurring or stored transactions and bypass
        service by indicating FALSE.'
      type: 'boolean'
      example: true
      writeOnly: true
    countryCodeText:
      description:
        'Uniquely represents a firm-recognized geopolitical area, including the
        ISO 3166 alpha 2-character country codes and other firm-created country
        codes. In this context, this is the ISO alphabetic country code, e.g.
        USA = United States'
      type: 'string'
      readOnly: true
    paymentBrandCardTypeCode:
      description:
        'Codifies a high level classification associated with the card account
        that could indicate how the issuer account is funded or used, e.g.
        Debit, Credit, Prepaid, Single Use.'
      type: 'string'
      readOnly: true
      enum:
        - 'CREDIT_CARD'
        - 'DEBIT_CARD'
        - 'PREPAID_CARD'
        - 'CHARGE_CARD'
        - 'DEFERRED_DEBIT'
        - 'NON_MASTERCARD'
    cardProductName:
      description:
        'Lable given to the primary processing network on which the account can
        make credit transactions. It also specifies the product types that VISA
        and MasterCard use to classify accounts for reporting. Note: There are
        some codes that are used only by Common Profit Book (CPB). Within the
        CPB, the existing code is replaced based on information from MasterCard
        and Visa. Formerly known as Association Product Code.'
      type: 'string'
    cardIssuerName:
      description:
        'The label given to the issuer of a card-based payment account. The term
        "issuer" may refer to either the payment brand itself, as for the
        American Express and Discover payment brands, or the issuer will be a
        financial institution authorized to issue cards with the payment brand
        logo, as is the case for Visa and MasterCard.'
      type: 'string'
      readOnly: true
    isBillPayment:
      description:
        'Indicates whether or not the transaction is identified as a bill
        payment, prearranged between the cardholder and the merchant.'
      type: 'boolean'
    downgradeReasonCode:
      description:
        'Optional field containing the network provided reason code indicating
        why the authorization did not qualify for CPS'
      type: 'string'
    recurring:
      description: 'Recurring Payment Object'
      type: 'object'
      properties:
        recurringSequence:
          $ref: '#/components/schemas/recurringSequence'
        agreementId:
          $ref: '#/components/schemas/agreementId'
        paymentAgreementExpiryDate:
          $ref: '#/components/schemas/paymentAgreementExpiryDate'
    originalTransactionId:
      description: 'Identifies a unique occurrence of a transaction.'
      type: 'string'
    paymentMethodType:
      description: 'paymentType'
      type: 'object'
      properties:
        card:
          $ref: '#/components/schemas/card'
        boleto:
          $ref: '#/components/schemas/boleto'
        googlepay:
          $ref: '#/components/schemas/googlepay'
        applepay:
          $ref: '#/components/schemas/applepay'
        ach:
          $ref: '#/components/schemas/ach'
    merchantOrderNumber:
      description:
        'A unique merchant assigned identifier for the confirmation of goods
        and/or services purchased. The merchant order provides the merchant a
        reference to the prices, quantity and description of goods and/or
        services to be delivered for all transactions included in the sale.'
      type: 'string'
      pattern: '[A-Za-z0-9 .-]*'
      minLength: 1
      maxLength: 40
      example: 'X1234'
    accountNumber:
      description: 'Identifies a unique occurrence of a payment account.'
      type: 'string'
      maxLength: 19
      writeOnly: true
    retailAddenda:
      description: 'Retail inductry specific attributes.'
      type: 'object'
      properties:
        purchaseOrderNumber:
          $ref: '#/components/schemas/purchaseOrderNumber'
        orderDate:
          description:
            'Designates the year, month, and day the request to purchase a
            service(s) or good(s) took place.'
          type: 'string'
        taxAmount:
          $ref: '#/components/schemas/taxAmount'
        isTaxable:
          $ref: '#/components/schemas/isTaxable'
        level3:
          $ref: '#/components/schemas/level3'
        gratuityAmount:
          $ref: '#/components/schemas/gratuityAmount'
    refundPaymentMethodType:
      description:
        'Object with one of the payment method type applicable for refund
        processing'
      type: 'object'
      properties:
        card:
          $ref: '#/components/schemas/refundCard'
        transactionReference:
          $ref: '#/components/schemas/transactionReference'
        ach:
          $ref: '#/components/schemas/ach'
    verificationPaymentMethodType:
      description:
        'Object with one of the payment method type applicable for verification
        processing'
      type: 'object'
      properties:
        card:
          $ref: '#/components/schemas/verificationCard'
        ach:
          $ref: '#/components/schemas/verificationACH'
    taxAmount:
      description:
        'Specifies the monetary value amount assessed to the transaction
        identified as Tax.'
      type: 'integer'
      format: 'int64'
      minimum: 0
      maximum: 999999999999
      example: 1234
    tokenAuthenticationResult:
      description:
        'Returned when more information about token authentication is received
        from the network'
      type: 'object'
      readOnly: true
      properties:
        code:
          $ref: '#/components/schemas/resultCode'
        message:
          $ref: '#/components/schemas/resultMessage'
    remainingRefundableAmount:
      description:
        'This is the amount of the transaction that is currently available for
        refunds.  It takes into account the original transaction amount as well
        as any previous refunds that were applied to the transaction.'
      type: 'integer'
      format: 'int64'
      minimum: 0
      maximum: 999999999999
      example: 1234
    accountHolder:
      description: 'Card owner properties'
      type: 'object'
      properties:
        referenceId:
          $ref: '#/components/schemas/accountHolderReferenceId'
        consumerIdCreationDate:
          description:
            "Designates the century, year, month and day that a merchant's
            customer profile has been first defined."
          type: 'string'
          format: 'date'
          example: '2020-09-20'
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          $ref: '#/components/schemas/email'
        mobile:
          $ref: '#/components/schemas/phone'
        phone:
          $ref: '#/components/schemas/phone'
        IPAddress:
          $ref: '#/components/schemas/ipAddress'
        billingAddress:
          $ref: '#/components/schemas/address'
        nationalId:
          $ref: '#/components/schemas/accountHolderNationalId'
    redirectedPayment:
      description: 'Redirected Payment attributes'
      type: 'object'
      properties:
        merchantReturnUrl:
          $ref: '#/components/schemas/merchantReturnUrl'
        redirectUrl:
          $ref: '#/components/schemas/redirectUrl'
        timestampReturned:
          $ref: '#/components/schemas/timestampReturned'
    refundCard:
      description: 'Card payment instrument for refund'
      type: 'object'
      required:
        - 'accountNumber'
      properties:
        expiry:
          $ref: '#/components/schemas/expiry'
        cardTypeName:
          $ref: '#/components/schemas/cardTypeName'
        cardType:
          $ref: '#/components/schemas/cardType'
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        cardTypeIndicators:
          $ref: '#/components/schemas/cardTypeIndicators'
        networkResponse:
          $ref: '#/components/schemas/networkResponse'
        walletProvider:
          description:
            'Identifies the organization who manages the e-wallet for a
            consumer. The actual e-wallet management responsibilities may
            include hosting, accessing, communicating, and/or updating all or
            some of the customer data associated with the e-wallet.  An E-wallet
            is an application that is created on the mobile device to interact
            with the Point of Sale (POS) device as a catalyst for a transaction.
            This value may be sent to the Firm (as in Visa Tokenization) or
            created by the Firm.'
          type: 'string'
          enum:
            - 'APPLE_PAY'
            - 'GOOGLE_PAY'
        originalNetworkTransactionId:
          $ref: '#/components/schemas/originalNetworkTransactionId'
        isBillPayment:
          $ref: '#/components/schemas/isBillPayment'
        authentication:
          $ref: '#/components/schemas/refundAuthentication'
        preferredPaymentNetworkNameList:
          $ref: '#/components/schemas/preferredPaymentNetworkNameList'
        merchantSalesChannelName:
          $ref: '#/components/schemas/merchantSalesChannelName'
        merchantPreferredRouting:
          $ref: '#/components/schemas/merchantPreferredRouting'
        paymentTokens:
          type: 'array'
          readOnly: true
          description: 'List of payment tokens for the transaction'
          items:
            $ref: '#/components/schemas/paymentToken'
    refundAuthentication:
      description:
        'The authentication object allows you to opt in to additional security
        features specific for refund'
      type: 'object'
      properties:
        electronicCommerceIndicator:
          $ref: '#/components/schemas/electronicCommerceIndicator'
        tokenAuthenticationResult:
          $ref: '#/components/schemas/tokenAuthenticationResult'
        tokenAuthenticationValue:
          description:
            'Contains authentication value received from Payment Networks for
            network token transactions'
          type: 'string'
          maxLength: 40
          format: 'base64'
          writeOnly: true
    accountHolderInformation:
      description:
        'Information about the card Account Holder for which fraud checking is
        performed.'
      type: 'object'
      properties:
        deviceIPAddress:
          description:
            'A unique string of numbers separated by periods that identifies
            each device using the Internet Protocol (IP) to communicate over a
            network.  An IP address is assigned to every single computer,
            printer, switch, router or any other device that is part of a
            TCP/IP-based network which allows users to send and receive data.
            The numerals in an IP address are divided into two parts:  1) The
            network part specifies which networks this address belongs to and 2)
            The host part further pinpoints the exact location. In this context,
            this is the IP address of the devices associated with the
            transaction.'
          type: 'string'
        birthDate:
          description:
            'Specifies the year month and day on which the individual was born.'
          type: 'string'
          format: 'date'
          example: '2000-09-20'
          writeOnly: true
        driverLicenseNumber:
          description:
            "A unique identifier assigned by a government agency that is not
            used by a Tax Authority to administer tax laws or by another
            government body to administer social and government programs. It may
            be used in conjunction with the party non tax government issued
            identifier type code. Examples include Driver's License number,
            green card id, and Passport number."
          type: 'string'
          writeOnly: true
        addressCountryCode:
          description:
            'A code that identifies the Country, a Geographic Area, that is
            recognized as an independent political unit in world affairs. Note:
            This data element is a child of the Country Code CDE and valid
            values are based on ISO standards. In this context, this is the
            country code of the consumer making the purchase.'
          type: 'string'
          readOnly: true
        email:
          $ref: '#/components/schemas/email'
        fullName:
          $ref: '#/components/schemas/fullName'
        referenceId:
          $ref: '#/components/schemas/accountHolderReferenceId'
        consumerIdCreationDate:
          description:
            "Designates the century, year, month and day that a merchant's
            customer profile has been first defined."
          type: 'string'
        phone:
          $ref: '#/components/schemas/phone'
        billingAddress:
          $ref: '#/components/schemas/address'
    verificationCard:
      description: 'Card payment instrument for card verification'
      type: 'object'
      properties:
        accountNumberType:
          description:
            'Codifies the type of payment method account number used for the
            payment transaction.'
          type: 'string'
          enum:
            - 'PAN'
            - 'NETWORK_TOKEN'
            - 'DEVICE_TOKEN'
            - 'SAFETECH_TOKEN'
            - 'SAFETECH_ENCRYPTION'
        cvv:
          description: 'Card verification value (CVV/CV2)'
          type: 'string'
          minLength: 3
          maxLength: 6
          pattern: "^\\d{3,6}$"
          writeOnly: true
        expiry:
          $ref: '#/components/schemas/expiry'
        cardTypeName:
          $ref: '#/components/schemas/cardTypeName'
        cardType:
          $ref: '#/components/schemas/cardType'
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        cardTypeIndicators:
          $ref: '#/components/schemas/cardTypeIndicators'
        networkResponse:
          $ref: '#/components/schemas/networkResponse'
        walletProvider:
          description:
            'Identifies the organization who manages the e-wallet for a
            consumer. The actual e-wallet management responsibilities may
            include hosting, accessing, communicating, and/or updating all or
            some of the customer data associated with the e-wallet.  An E-wallet
            is an application that is created on the mobile device to interact
            with the Point of Sale (POS) device as a catalyst for a transaction.
            This value may be sent to the Firm (as in Visa Tokenization) or
            created by the Firm.'
          type: 'string'
          enum:
            - 'APPLE_PAY'
            - 'GOOGLE_PAY'
        originalNetworkTransactionId:
          $ref: '#/components/schemas/originalNetworkTransactionId'
        isBillPayment:
          $ref: '#/components/schemas/isBillPayment'
        authentication:
          $ref: '#/components/schemas/authentication'
        paymentTokens:
          type: 'array'
          readOnly: true
          description: 'List of payment tokens for the transaction'
          items:
            $ref: '#/components/schemas/paymentToken'
        encryptionIntegrityCheck:
          $ref: '#/components/schemas/encryptionIntegrityCheck'
    hostReferenceId:
      description:
        'Identifies unique identifier generated by the acquirer processing
        system and return to merchant for reference purposes.'
      type: 'string'
    partialAuthorizationSupport:
      description:
        'Indicates that the issuer has provided the merchant an authorization
        for a portion of the amount requested. This service provides an
        alternative to receiving a decline when the available card balance is
        not sufficient to approve a transaction in full.In this context, this
        indicate if merchant support parial authorization.'
      type: 'string'
      enum:
        - 'SUPPORTED'
        - 'NOT_SUPPORTED'
    isCapture:
      description:
        '(Deprecated) For auth only, send isCapture=false. For sale or update an
        authorized payment to capture, send isCapture=true.'
      type: 'boolean'
    tokenServiceResponseMessage:
      description:
        'Long explanation of response Message received from token service'
      type: 'string'
      readOnly: true
    tokenServiceResponseCode:
      description: 'Short explanation of response Code'
      type: 'string'
      readOnly: true
    tokenNumber:
      description:
        'The token number is a secure surrogate value generated for an account
        number in a payment transaction. The token is substituted for the card
        number or primary account number (PAN), Demand Deposit Account (DDA)
        Number or other payment account and is used to process and identify
        transactions originating from that account.'
      type: 'string'
      readOnly: true
    tokenProvider:
      description:
        'The label given to a provider who creates the digital token for cards.'
      type: 'string'
      readOnly: true
      enum:
        - 'NETWORK'
        - 'SAFETECH'
    level3:
      description:
        'Level 3 data provides commercial shoppers with additional information
        about purchases on their card statements.'
      type: 'object'
      properties:
        totalShippingAmount:
          description:
            'Specifies the monetary value to be paid for the postage and related
            transportation to get a package from the shipping carrier to the
            consumer for all items purchased.'
          type: 'integer'
          format: 'int64'
        dutyAmount:
          description:
            'Specifies the monetary value for an additional tax levied or tariff
            charged against the purchase of goods or services imported from
            another country. Taxes or tariffs (duties) are also charged for some
            forms of exports. The customs authorities for a country are usually
            the taxing body, and duties are enforceable by law. Synonyms include
            but are not limited to: tax, toll, excise, levy, charge, rate, fee,
            countervail, customs and price list.'
          type: 'integer'
          format: 'int64'
        shipToAddressPostalCode:
          description:
            'The portion of a party?s address that is the encoded representation
            of a geographic area to facilitate mail delivery services.'
          type: 'string'
        shipToAddressCountryCode:
          description:
            'A code that identifies the Country, a Geographic Area, that is
            recognized as an independent political unit in world affairs. Note:
            This data element is a child of the Country Code CDE and valid
            values are based on ISO standards.'
          type: 'string'
        shipFromAddressPostalCode:
          description:
            'The portion of a party?s address that is the encoded representation
            of a geographic area to facilitate mail delivery services.'
          type: 'string'
        totalTransactionDiscountAmount:
          description:
            'Specifies the monetary value to which the merchant applied a
            reduction (e.g., percentage or fixed amount) to a single line item
            of the purchase, the total purchase amount, or the tax portion of
            the transaction. If the reduction is for the taxable portion of the
            transaction, then the monetary value of the tax levied becomes a
            fixed purchase price reduction for the total transaction and the
            purchaser; yet the tax is still levied and collected against the
            reduced purchase amount and reported to the taxing body.'
          type: 'integer'
          format: 'int64'
        valueAddedTaxAmount:
          description:
            'Specifies the monetary value of the Value Added Tax (VAT) charged
            for either a line item or an entire transaction. VAT is a
            consumption tax levied on the sale of goods and services (a.k.a.
            Goods and Services Tax (GST)). VAT is an indirect tax, in that the
            tax is collected from someone other than the person who actually
            bears the cost of the tax.'
          type: 'integer'
          format: 'int64'
        valueAddedTaxPercent:
          description:
            'Specifies the fixed ratio applied to the transaction for Value
            Added Tax for a line item or an entire transaction. VAT is a
            consumption tax levied on the sale of goods and services (a.k.a.
            Goods and Services Tax (GST)). VAT is an indirect tax, in that the
            tax is collected from someone other than the person who actually
            bears the cost of the tax.'
          type: 'string'
        shippingValueAddedTaxPercent:
          description:
            'Specifies the fixed ratio applied to the transaction for Value
            Added Tax for a line item or an entire transaction. VAT is a
            consumption tax levied on the sale of goods and services (a.k.a.
            Goods and Services Tax (GST)). VAT is an indirect tax, in that the
            tax is collected from someone other than the person who actually
            bears the cost of the tax.'
          type: 'string'
        orderDiscountTreatmentCode:
          description: 'Indicates how the merchant is managing discounts.'
          type: 'string'
        valueAddedTaxInvoiceReferenceNumber:
          description:
            'Identifies the additional subelement used to identify the
            value-added tax (VAT) invoice or tax receipt.'
          type: 'string'
        shippingValueAddedTaxAmount:
          description:
            'Specifies the monetary value of the Value Added Tax (VAT) charged
            for either a line item or an entire transaction. VAT is a
            consumption tax levied on the sale of goods and services (a.k.a.
            Goods and Services Tax (GST)). VAT is an indirect tax, in that the
            tax is collected from someone other than the person who actually
            bears the cost of the tax.'
          type: 'integer'
          format: 'int64'
        partyTaxGovernmentIssuedIdentifier:
          description:
            'An identifier assigned by a government agency that is used by a Tax
            Authority to administer tax laws or by another government body to
            administer social and government programs.'
          type: 'string'
        alternateTaxAmount:
          description: 'The amount added to the transaction for taxes.'
          type: 'integer'
          format: 'int64'
        lineItems:
          type: 'array'
          description: 'List Of line Items'
          items:
            $ref: '#/components/schemas/lineItem'
        transactionAdvices:
          type: 'array'
          description: 'List of transaction advices from American Express'
          items:
            $ref: '#/components/schemas/transactionAdvice'
    lineItem:
      description: 'Line Item data within the Level 3'
      type: 'object'
      properties:
        lineItemDescriptionText:
          description:
            'Provides detailed information regarding specific goods or services
            that have been procured and for which payment has been requested.'
          type: 'string'
        merchantProductIdentifier:
          description:
            'A unique merchant assigned identifier for an item or service
            offered for sale by the Merch'
          type: 'string'
        itemComodityCode:
          description:
            'Codifies the category the item being purchased belongs in a
            standardized commodity group as defined by the card acceptor.'
          type: 'string'
        lineItemUnitQuantity:
          description:
            'Enumerates the volume (quantity) of each individual product type
            included in the transaction. The quantity, unit of measure and the
            line item price is used to calculate the aggregated purchase amount
            for each line item. In some cases, quantity can include a fraction
            or decimal places to allow for items such as hours of service
            provided, or a pound portion of goods.'
          type: 'string'
        lineItemUnitofMeasureCode:
          description:
            'Codifies the method used for computing the size, length, magnitude
            or other form of good, service or other measurement, expressed as a
            number or measure (e.g., drum, box, tote, bucket) or quantity (e.g.,
            KTM = Kilometer, LBR = pound, MIN = minute). It is used in
            combination with a Line Item Product Type Count and Line Item Price
            to calculate the purchase amount for that line item in a transaction'
          type: 'string'
        unitPriceAmount:
          description:
            'Specifies the monetary value of the per-item cost of a good or
            service.'
          type: 'integer'
          format: 'int64'
        taxInclusiveLineItemTotalAmount:
          description:
            'Specifies the monetary value (inclusive of tax) for the price of
            the product or service multiplied by the quantity of the items
            purchased recorded in the transaction addendum data.'
          type: 'integer'
          format: 'int64'
        transactionDiscountAmount:
          description:
            'Specifies the monetary value to which the merchant applied a
            reduction (e.g., percentage or fixed amount) to a single line item
            of the purchase, the total purchase amount, or the tax portion of
            the transaction. If the reduction is for the taxable portion of the
            transaction, then the monetary value of the tax levied becomes a
            fixed purchase price reduction for the total transaction and the
            purchaser; yet the tax is still levied and collected against the
            reduced purchase amount and reported to the taxing body.'
          type: 'integer'
          format: 'int64'
        purchaseTransactionDiscountPercent:
          description:
            'Specifies the ratio of the reduction amount applied by the merchant
            (e.g., based on a percentage or fixed amount) to the purchase amount
            on a transaction. Discount percentages could be calculated at
            individual line item, or total transaction levels.'
          type: 'string'
        lineItemDiscountTreatmentCode:
          description:
            'Indicates how the merchant is handling discount at line item level.
            Valid value:  0 ? No line level discount  1 ? Tax calculated on
            post-discount line item total  2 ? Tax calculated on pre-discount
            line item total'
          type: 'string'
        lineItemDetailCode:
          description: 'codifies type of line item detail record.'
          type: 'string'
        lineItemTaxIndicator:
          description:
            'Indicates whether tax amount is included in item amount.'
          type: 'boolean'
        lineItemDiscountIndicator:
          description: 'Indicates whether the amount is discounted.'
          type: 'boolean'
        lineItemTaxes:
          type: 'array'
          description: 'List Of line Items Tax Information'
          items:
            $ref: '#/components/schemas/lineItemTax'
    lineItemTax:
      description: 'Tax information in the Line Item data within the Level 3.'
      type: 'object'
      properties:
        taxTypeCode:
          description:
            'Codifies the form of tax applied to a transaction (e.g., 01 =
            Federal/National Sales Tax, 11 = Goods and Services Tax (GST), VA =
            Value Added Tax (VAT)).'
          type: 'string'
        lineItemTaxAmount:
          description: 'The amount added to the transaction for taxes.'
          type: 'integer'
          format: 'int64'
        taxPercent:
          description:
            'Specifies the ratio of the tax levied by a governmental authority
            on a product or service.'
          type: 'string'
    transactionAdvice:
      description: 'Transaction advice information for Amex transaction'
      type: 'object'
      properties:
        transactionAdviceText:
          description:
            'Textual information containing Level 3 data for American Express
            Advice Addendum'
          type: 'string'
    captureMethod:
      description:
        'To capture via separate API call, send captureMethod= ?Manual.? For
        immediate capture, send captureMethod= ?Now.? For automated delayed
        capture based on merchant profile setting (default is 120 minutes), send
        captureMethod= ?Delayed.?'
      type: 'string'
      enum:
        - 'NOW'
        - 'DELAYED'
        - 'MANUAL'
    gratuityAmount:
      description:
        'Specifies the monetary value paid by the consumer over and above the
        payment due for service.'
      type: 'integer'
      format: 'int64'
      minimum: 0
      maximum: 999999999999
      example: 234
    softMerchant:
      description:
        'Soft merchant information is passed to the card association along with
        the transaction. This soft merchant information may also be used for
        cases where smaller businesses or franchise outlets are making a sale in
        which a merchant aggregator or payment facilitatorprocesses the payment
        transaction on their behalf.'
      type: 'object'
      properties:
        name:
          description:
            "The label given to the merchant name as it appears on the account
            holder's statement. This soft merchant name may be used for
            statement and reporting consistency, and to help reduce disputes
            because it is more recognizable name to the account holder. The
            merchant name typically is defaulted to the merchant's Doing
            Business as Name (DBA name) as stored in the Firm's merchant set up
            system. However, this default DBA name may be overridden on the
            transaction for certain merchants such as aggregators and petroleum
            merchants. This override is only allowed when there is a flag set to
            enable the merchant to send soft merchant information to the Firm.
            This soft merchant information is passed to the card association
            along with the transaction. This soft merchant information may also
            be used for cases where smaller businesses or franchise outlets are
            making a sale in which a merchant aggregator or payment facilitator
            processes the payment transaction on their behalf."
          type: 'string'
        phone:
          description: 'Soft Merchant phone number'
          type: 'string'
        email:
          description: 'Soft merchant email address'
          type: 'string'
        url:
          description: 'Soft merchant URL'
          type: 'string'
        address:
          $ref: '#/components/schemas/address'
        merchantPurchaseDescription:
          description:
            'Provides textual information provided by the merchant that is
            specific to their internal systems or processing regarding the
            items, servicing or sourcing related to the transaction.'
          type: 'string'
    paymentToken:
      description: 'Token Information for the payment transaction'
      type: 'object'
      properties:
        tokenProvider:
          $ref: '#/components/schemas/tokenProvider'
        tokenNumber:
          $ref: '#/components/schemas/tokenNumber'
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        tokenServiceResponseMessage:
          $ref: '#/components/schemas/tokenServiceResponseMessage'
        tokenServiceResponseCode:
          $ref: '#/components/schemas/tokenServiceResponseCode'
    fraudCheckRequest:
      description: 'Object for passing fraud check request parameters'
      type: 'object'
      required:
        - 'amount'
        - 'currency'
        - 'paymentMethodType'
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        fraudScore:
          $ref: '#/components/schemas/fraudScore'
        accountHolder:
          $ref: '#/components/schemas/accountHolderInformation'
        paymentMethodType:
          $ref: '#/components/schemas/fraudCheckPaymentMethodType'
        shipTo:
          $ref: '#/components/schemas/fraudShipTo'
        merchant:
          $ref: '#/components/schemas/merchant'
    fraudCheckResponse:
      description: 'Responses for the fraud check'
      type: 'object'
      properties:
        transactionId:
          $ref: '#/components/schemas/transactionId'
        requestId:
          $ref: '#/components/schemas/requestId'
        riskDecision:
          $ref: '#/components/schemas/riskDecision'
        riskElement:
          $ref: '#/components/schemas/riskElement'
        hostReferenceId:
          description:
            'Identifies unique identifier generated by the acquirer processing
            system and return to merchant for reference purposes.'
          type: 'string'
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        responseMessage:
          $ref: '#/components/schemas/responseMessage'
        hostMessage:
          $ref: '#/components/schemas/hostMessage'
        merchant:
          $ref: '#/components/schemas/merchant'
    riskDecision:
      description: 'Object containing Risk Decision information.'
      type: 'object'
      properties:
        fraudRiskScore:
          description: 'industryType'
          type: 'string'
        fraudRuleAction:
          description:
            'Codifies the next step of the fraud analysis based on the risk rule
            result as defined by the merchant.'
          type: 'string'
        digitalAlertRuleName:
          description:
            'The moniker given to the alert rule used to identify potential
            fraud online. (e.g. 200Billpay, 300ACH, QPRT Quickpay V005)'
          type: 'string'
        fraudStatus:
          description:
            'Codifies the status of card at time of suspected fraud. Note: Used
            in conjunction with the Fraud Method Code field. Contains the first
            character the 2-character alphanumeric Fraud Type entered in the
            Code1 field of the Work Suspect Fraud screen. Code used to further
            define an account status. Specifically, the fraud type codes defined
            by credit card associations. Commonly known as Fraud Type 1 Code.'
          type: 'string'
        fraudStatusDescription:
          description:
            'The label for the status of card at time of suspected fraud. Note:
            Used in conjunction with the Fraud Method Code field. Contains the
            first character the 2-character alphanumeric Fraud Type entered in
            the Code1 field of the Work Suspect Fraud screen. Code used to
            further define an account status. Specifically, the fraud type codes
            defined by credit card associations. Commonly known as Fraud Type 1
            Code.'
          type: 'string'
        fraudRiskResponse:
          description:
            'Codifies the success or failure of a request to the fraud engine to
            assign a risk score to a payment transaction. This request is done
            prior to the authorization.'
          type: 'string'
    riskElement:
      description: 'Object containing Risk Element information'
      type: 'object'
      properties:
        fraudEvaluatorTransactionId:
          description:
            'Identifies a unique occurrence of a transaction. In this context,
            this is the fraud evaluator provided transaction id.'
          type: 'string'
        highestRiskCountry:
          description:
            "The portion of a party's address that is the encoded representation
            of a geographic area representing a country. Tn this context, this
            represents the country with the highest level of known e-commerce
            risk, as determined by the US State Department, that has been
            associated with a particular persona within the last 14 days."
          type: 'string'
        highestRiskRegion:
          description:
            'Codifies a geographic area represented by one or more Countries,
            States or Provinces. Country, State or Province identifies a
            geographic area that represents a Firm recognized geopolitical unit.
            In this context, this is the region which represents the highest
            level of known e-commerce risk, as determined by the US State
            Department, that has been associated with a particular persona
            within the last 14 days.'
          type: 'string'
        cardType:
          $ref: '#/components/schemas/cardType'
        fourteenDaysTransactionCount:
          description:
            'Enumerates the occurrences of any transaction within a given
            period. In this context, this represent how many times the persona
            has been seen for the merchant in last 14 days.'
          type: 'integer'
          format: 'int32'
        sixHoursTransactionCount:
          description:
            'Enumerates the occurrences of any transaction within a given
            period. In this context, this represent how many times the persona
            has been seen for the merchant in last 6 hours.'
          type: 'integer'
          format: 'int32'
        fourteenDaysCardRecordCount:
          description:
            'Enumerates the quantity of records in a data object that is
            processed or transmitted. In this context, this is the number of
            cards associated with transaction that the fraud system has
            recorded.'
          type: 'integer'
          format: 'int32'
        fourteenDaysDeviceRecordCount:
          description:
            'Enumerates the quantity of records in a data object that is
            processed or transmitted. In this context, this is the record count
            of the email associated with the transaction that the fraud system
            has recorded.'
          type: 'integer'
          format: 'int32'
        fourteenDaysEmailRecordCount:
          description:
            'Enumerates the quantity of records in a data object that is
            processed or transmitted. In this context, this is the record count
            of the devices associated with the transaction that the fraud system
            has recorded.'
          type: 'integer'
          format: 'int32'
        deviceLayers:
          description:
            'Identifies a unique occurrence of an electronic device (and the
            software) used by the customer to communicate with the Firm or a
            third party to receive, store, process or send digital information.'
          type: 'string'
        sessionMatchIndicator:
          description:
            'Indicates the Kaptcha session identifier generated by the fraud
            engine during checkout is validated and matches the session
            identifier received on the transaction.'
          type: 'boolean'
        hashedDigitalDeviceFingerprintIdentifier:
          description:
            'Identifies a unique occurrence of an electronic device (and the
            software) used by the customer to communicate with the Firm or a
            third party to receive, store, process or send digital information.
            In this context, this identifier consists of the 5 device layers
            representing the operating system, browser, JavaScript settings,
            cookie setting and flash settings.'
          type: 'string'
        deviceTimestamp:
          description:
            'Designates the current hour (hh), minute (mm), seconds (ss) and
            date on the eletronic instrument used by a consumer for a payment
            authorization during the fraud analysis. This may differ from the
            actual current time if changed by the device owner.'
          type: 'string'
        deviceLocalTimeZone:
          description:
            'Represents a unique code assigned by the firm for a geographical
            area that observes a uniform standard time for legal, commercial,
            and social purposes. In this context, this is the local time the
            device owner has set in the device settings.'
          type: 'string'
        deviceRegion:
          description:
            'Codifies a geographic area represented by one or more Countries,
            States or Provinces. Country, State or Province identifies a
            geographic area that represents a Firm recognized geopolitical unit.
            In this context, this is the region associated to the Device
            Location.'
          type: 'string'
        deviceCountry:
          description:
            'Codifies the country, a geographic area, that is recognized as an
            independent political unit in world affairs where the point of sale
            device was used for a transaction. Null value indicates country code
            is not provided.'
          type: 'string'
        deviceProxyServer:
          description:
            'Indicates if a device uses a proxy server as an intermediary
            between an endpoint device, such as a computer or mobile device, and
            the server from which a user or client is making a purchase.'
          type: 'boolean'
        browserJavaScriptEnabled:
          description:
            "Indicates if the device's application software, used to communicate
            between users of the Internet's World Wide Web, allows javascript."
          type: 'boolean'
        browserAdobeFlashEnabled:
          description:
            "Indicates if the device's application software, used to communicate
            between users of the Internet's World Wide Web, allows Adobe flash."
          type: 'boolean'
        browserCookiesEnabled:
          description:
            "Indicates if the device's application software, used to communicate
            between users of the Internet's World Wide Web, allows cookies."
          type: 'boolean'
        deviceBrowserCountry:
          description:
            'Uniquely represents a firm-recognized geopolitical area, including
            the ISO 3166 alpha 2-character country codes and other firm-created
            country codes. In this context, this is the country code associated
            with browser.'
          type: 'string'
        deviceBrowserLanguage:
          description:
            'Codifies the method of communication, either spoken or written,
            consisting of the use of words in a structured and conventional way.
            The gold (master) set of values is defined by the International
            Standards Organization in ISO standard 639-3. In this context, this
            is the the language the device owner has set in the device settings.'
          type: 'string'
        mobileDevice:
          description:
            'Indicate if the device placing the order a mobile device.'
          type: 'boolean'
        digitalDeviceType:
          description:
            'The label given to the type of electronic device that can receive,
            store, process or send digital information that can be used to
            communicate with a web page.'
          type: 'string'
        deviceWirelessCapability:
          description:
            'Indicate if the device placing the order has capability to connect
            to internet wirelessly.'
          type: 'boolean'
        deviceVoiceControlled:
          description:
            'Indicate if the device placing the order voice activated (related
            to mobile devices).'
          type: 'boolean'
        deviceRemotelyControlCapability:
          description:
            'Indicate if the device placing the order is enabled to use PC
            Remote software.'
          type: 'boolean'
        deviceNetworkType:
          description:
            'Codifies the categorization of the internet network using the
            Internet Protocol (IP) Address associated with the party (consumer).
            This category is assigned by the fraud engine based on the IP
            address/domain.'
          type: 'string'
    fraudScore:
      description: 'Object for Fraud Score Information'
      type: 'object'
      properties:
        cardholderBrowserInformation:
          description:
            "The label for a web browser which is used to access and view
            websites for the merchant's products and services by consumer who is
            making a purchase."
          type: 'string'
        isFraudRuleReturn:
          description:
            'Indicates the fraud checking rules that flagged the payment
            transaction as potentially fraudulent are returned to the merchant.'
          type: 'boolean'
        fraudCheckShoppingCart:
          description:
            'Provides textual information about the purchase of a product or
            service via an online retailer that is stored via a digital basket
            tha enables consumers to select products, review what they selected
            and make modifications before finalizing the
            purchase.  Supplemental: In this context, User (merchant) defined
            information may be included such as fraud rule values. Examples of
            fraud rules value may be a maximum basket value, a maximum product
            quantity, etc.'
          type: 'string'
        sessionId:
          description:
            'Identifies an interaction between a customer and a representative
            with the Firm within a given application tool.'
          type: 'string'
        websiteRootDomainName:
          description:
            'The label given to combination of the Web Address Top Level and the
            Web Address Second Level domain identfiers. This is commonly
            referred to as the website name.'
          type: 'string'
        fencibleItemAmount:
          description:
            "The monetary value of items that are typically locked or stored
            behind the counter and aren't available for general selection on
            store shelves by customers."
          type: 'integer'
          format: 'int64'
        aNITelephoneNumber:
          description:
            'A locator whose value identifies the formatted numeric address for
            routing voice or data communications via telephony, to reach a
            party. NOTE: Telephone number formats may vary; this field can
            include domestic and international telephone numbers.'
          type: 'string'
          writeOnly: true
    fraudCheckPaymentMethodType:
      description:
        'Object with information for Payment Method Type for  Fraud Check'
      type: 'object'
      properties:
        card:
          $ref: '#/components/schemas/fraudCard'
    fraudCard:
      description: 'Card payment instrument for fraud checking'
      type: 'object'
      required:
        - 'accountNumber'
      properties:
        expiry:
          $ref: '#/components/schemas/expiry'
        cardTypeName:
          $ref: '#/components/schemas/cardTypeName'
        cardType:
          $ref: '#/components/schemas/cardType'
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        cardTypeIndicators:
          $ref: '#/components/schemas/cardTypeIndicators'
        networkResponse:
          $ref: '#/components/schemas/networkResponse'
    fraudShipTo:
      description: 'Ship To Information used for fraud checking services.'
      type: 'object'
      properties:
        shippingAddress:
          $ref: '#/components/schemas/address'
        shippingDescription:
          description: 'Description of shipping or delivery method'
          type: 'string'
          maxLength: 120
        fullName:
          $ref: '#/components/schemas/fullName'
        phone:
          $ref: '#/components/schemas/phone'
        firstName:
          $ref: '#/components/schemas/firstName'
        lastName:
          $ref: '#/components/schemas/lastName'
        middleName:
          $ref: '#/components/schemas/middleName'
    sourceAccountInformation:
      description: 'Source Account Information'
      type: 'object'
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        internationalBusinessIdentifierCode:
          $ref: '#/components/schemas/internationalBusinessIdentifierCode'
        internationalBankAccountNumber:
          $ref: '#/components/schemas/internationalBankAccountNumber'
        bankName:
          description:
            'The label given to a financial institution authorized by a
            government to accept deposits, make loans, pay interest, clear
            checks, and provide other financial services to its customers.'
          type: 'string'
    firstName:
      description:
        "That part of an individual's full name considered a personal name or
        given name and generally positioned before the last name or family name."
      type: 'string'
      pattern: "[A-Za-z''. ]*"
      minLength: 1
      maxLength: 70
      writeOnly: true
    lastName:
      description:
        'That part of an individual?s name generally placed at the end of the
        given name. The last name is also known as the surname or family name.
        (Note: name conventions may be different based on practices in different
        countries. Some countries use two or more last names; in other
        countries, the family name is placed before a person?s given name; in
        some countries, it is common for people to have only one name or a
        mononym.)'
      type: 'string'
      pattern: "[A-Za-z''. ]*"
      minLength: 1
      maxLength: 70
      writeOnly: true
    middleName:
      description:
        "That part of an individual's name generally positioned between the
        first and family names, as a second given name or a maternal surname.
        (NOTE: in some instances, an individual may have multiple middle names)"
      type: 'string'
      pattern: "[A-Za-z''. ]*"
      minLength: 1
      maxLength: 70
      writeOnly: true
    paymentRequestId:
      description:
        'Identifies a unique occurrence of an payment processing request from
        merchant that is associated with a purchase of goods and/or services. A
        payment request consist of authorization, captures and refunds.'
      type: 'string'
    captureRequest:
      description: 'Request information for capture a payment'
      type: 'object'
      properties:
        captureMethod:
          $ref: '#/components/schemas/captureMethod'
        merchant:
          $ref: '#/components/schemas/merchant'
        recurring:
          $ref: '#/components/schemas/recurring'
        installment:
          $ref: '#/components/schemas/installment'
        paymentMethodType:
          $ref: '#/components/schemas/multiCapturePaymentMethodType'
        shipTo:
          $ref: '#/components/schemas/shipTo'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        originalTransactionId:
          $ref: '#/components/schemas/originalTransactionId'
        isAmountFinal:
          $ref: '#/components/schemas/isAmountFinal'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        risk:
          $ref: '#/components/schemas/risk'
        retailAddenda:
          $ref: '#/components/schemas/retailAddenda'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        partialAuthorizationSupport:
          $ref: '#/components/schemas/partialAuthorizationSupport'
        paymentRequestId:
          $ref: '#/components/schemas/paymentRequestId'
        multiCapture:
          $ref: '#/components/schemas/multiCapture'
    multiCapturePaymentMethodType:
      description:
        'Multi Capture Payment Method Type contains all the payment method code
        supported for multi capture payment processing capability'
      type: 'object'
      properties:
        card:
          $ref: '#/components/schemas/card'
    multiCapture:
      description: 'Split Shipment Information'
      type: 'object'
      properties:
        multiCaptureSequenceNumber:
          description:
            'Identifies the number indicating the location of this record in the
            sorting sequence of the specified data.'
          type: 'string'
        multiCaptureRecordCount:
          description:
            'Enumerates the quantity of records in a data object that is
            processed or transmitted. In this context, this is the the total
            number of expected shipments associated with a single authorization.'
          type: 'integer'
          format: 'int32'
        isFinalCapture:
          description:
            'Indicates if it is the final shipment associated with a single
            authorization.'
          type: 'boolean'
    paymentRequest:
      description: 'Payment request information for multi capture order'
      type: 'object'
      properties:
        paymentRequestId:
          $ref: '#/components/schemas/paymentRequestId'
        paymentRequestStatus:
          description:
            'Codifies the point in the payment processing request flow from
            merchant. A payment request consist of authorization, captures and
            refunds.  Valid Values are : PENDING, OPEN, CLOSED, CANCELLED'
          type: 'string'
          enum:
            - 'PENDING'
            - 'OPEN'
            - 'CLOSED'
            - 'CANCELLED'
        authorizations:
          type: 'array'
          readOnly: true
          description: 'List of payment authorization information'
          items:
            $ref: '#/components/schemas/paymentAuth'
        captures:
          type: 'array'
          readOnly: true
          description: 'List of payment capture information'
          items:
            $ref: '#/components/schemas/paymentCapture'
        refunds:
          type: 'array'
          description: 'List of payment refund information'
          items:
            $ref: '#/components/schemas/paymentRefund'
    paymentAuth:
      description: 'Authorization request information for multi capture order'
      type: 'object'
      properties:
        authorizationId:
          description:
            'Identifies a unique occurrence of an authorization that is
            associated with a purchase of goods and/or services. More than one
            authorization can exist for a purchase, as an example in fuel and
            hotel services a merchant can send multiple authorization requests
            when the exact amount is unknown until completion of the sale.'
          type: 'string'
        amount:
          $ref: '#/components/schemas/amount'
        transactionStatusCode:
          description:
            'Codifies the point in the payment transaction flow of the
            transaction. For example, a typical transaction is authorized then
            captured for clearing and settlement; closed is when the transaction
            is ready for clearing and completed when the transaction is sent to
            the payment network for clearing.'
          type: 'string'
        authorizationType:
          description:
            'Codifies the type of transaction approval sought by a merchant such
            as a pre-authorization, final authorization, or undetermined.'
          type: 'string'
          enum:
            - 'INITIAL'
            - 'REAUTH'
            - 'INCREMENTAL'
    paymentCapture:
      description: 'Payment capture information for multi capture order'
      type: 'object'
      properties:
        captureId:
          $ref: '#/components/schemas/captureId'
        amount:
          $ref: '#/components/schemas/amount'
        transactionStatusCode:
          description:
            'Codifies the point in the payment transaction flow of the
            transaction. For example, a typical transaction is authorized then
            captured for clearing and settlement; closed is when the transaction
            is ready for clearing and completed when the transaction is sent to
            the payment network for clearing.'
          type: 'string'
        captureRemainingRefundableAmount:
          description: 'Capture amount available to be refunded'
          type: 'integer'
          format: 'int64'
    paymentRefund:
      description: 'Payment refund information for multi capture order'
      type: 'object'
      properties:
        refundId:
          description:
            'Identifies a unique occurrence of a payment settlement request when
            the authorization is complete and the transaction is ready for
            settlement. The transaction can no longer be edited but can be
            voided.'
          type: 'string'
        amount:
          $ref: '#/components/schemas/amount'
        transactionStatusCode:
          description:
            'Codifies the point in the payment transaction flow of the
            transaction. For example, a typical transaction is authorized then
            captured for clearing and settlement; closed is when the transaction
            is ready for clearing and completed when the transaction is sent to
            the payment network for clearing.'
          type: 'string'
    captureId:
      description:
        'Identifies a unique occurrence of a payment settlement request when the
        authorization is complete and the transaction is ready for settlement.
        The transaction can no longer be edited but can be voided.'
      type: 'string'
    transactionProcessor:
      description:
        "Codifies specific system a client's program operates on within the Firm
        and through which cardholder transactions are submitted and processed"
      type: 'string'
    internationalBankAccountNumber:
      description:
        'Identifies the International Bank Account Number (IBAN) for the
        account.  IBAN is an internationally agreed system of identifying bank
        accounts across national borders to facilitate the communication and
        processing of cross border transactions with a reduced risk of
        transcription errors. Based on ISO 13616 standards, the IBAN consists of
        up to 34 alphanumeric characters, comprising a country code, two check
        digits and a long and detailed bank account-number. The check digits
        enable a sanity check of the bank account number to confirm its
        integrity before submitting a transaction.'
      type: 'string'
      maxLength: 34
      writeOnly: true
    internationalBusinessIdentifierCode:
      description:
        'Codifies the unique value that identifies a particular bank in the
        worldwide economy. The 8 to 11 digit code is based on ISO 9362
        standards. This code has several aliases including SWIFT Code, SWIFT
        Bank Code and Bank Identification Code (BIC). ISO 9362:2014 specifies
        the elements and structure of a universal identifier code for financial
        and non-financial institutions where an international identifier is
        required to facilitate automated processing of information for financial
        services.  The BIC is used for addressing messages, routing business
        transactions and identifying business parties. This Standard applies to
        organizations and excludes individual persons.'
      type: 'string'
      maxLength: 11
    transactionRoutingOverrideList:
      type: 'array'
      description:
        'List of transaction routing providers where the transaction be routed
        preferred by the merchant .'
      items:
        type: 'string'
        enum:
          - 'STONE'
          - 'CIELO'
          - 'GETNET'
          - 'REDECARD'
    preferredPaymentNetworkName:
      description:
        "The label for primary transactions processing network through which
        card's (Debit or credit) account transactions are processed."
      type: 'string'
      enum:
        - 'STAR_PINLESS'
        - 'PULSE_PINLESS'
        - 'NYCE_PINLESS'
        - 'ACCEL_PINLESS'
    preferredPaymentNetworkNameList:
      type: 'array'
      description:
        "Define the list of Payment Network Name preferred by merchant.  Payment
        Network Name is the label for primary transactions processing network
        through which card's (Debit or credit) account transactions are
        processed."
      items:
        $ref: '#/components/schemas/preferredPaymentNetworkName'
    merchantSalesChannelName:
      description:
        "Label given to a merchant client of the Firm's medium for reaching its
        customers and facilitating and/or performing sales of its merchandise or
        services."
      type: 'string'
      enum:
        - 'MAIL_ORDER_TELEPHONE_ORDER'
        - 'INTERNET'
        - 'INTERACTIVE_VOICE_RESPONSE'
    merchantPreferredRouting:
      description:
        'Codifies the routing model used to route the transaction as preferred
        by merchant.'
      type: 'string'
      enum:
        - 'PINLESS'
        - 'CREDIT'
    encryptionIntegrityCheck:
      description:
        'The alphanumeric string generated by voltage to verify the soundness of
        the encrypted key used by merchant and payment process. The merchant
        passed this in the API call. The backend process validates the
        subscriber id and format matches - between the merchant request for a
        key and the UPG request'
      type: 'string'
      writeOnly: true
    ach:
      description:
        "Object for ACH (Automated Clearing House) payment method which occurs
        whenever someone instructs the ACH network to ?push? money from their
        account to someone else's. This is mostly used in USA."
      type: 'object'
      required:
        - 'accountNumber'
        - 'financialInstitutionRoutingNumber'
      properties:
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        financialInstitutionRoutingNumber:
          $ref: '#/components/schemas/financialInstitutionRoutingNumber'
        paymentType:
          $ref: '#/components/schemas/paymentType'
        accountType:
          $ref: '#/components/schemas/accountType'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        unmaskedAccountNumber:
          $ref: '#/components/schemas/unmaskedAccountNumber'
        isTransactionMicroEntry:
          description:
            'Indicates If a Micro-Entry  is used for account validation
            purposes. *Micro-Entries are defined as ACH credits of less than $1
            and any offsetting ACH debits to verify a Receiver?s account.'
          type: 'boolean'
    verificationACH:
      description: 'Verification of ACH account'
      type: 'object'
      properties:
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        financialInstitutionRoutingNumber:
          $ref: '#/components/schemas/financialInstitutionRoutingNumber'
        paymentType:
          $ref: '#/components/schemas/paymentType'
        accountType:
          $ref: '#/components/schemas/accountType'
        achVerificationType:
          description: 'Indicates the type of ACH verification being performed.'
          type: 'string'
          enum:
            - 'BASIC'
            - 'ACCOUNT_STATUS'
            - 'ACCOUNT_OWNER'
            - 'PRE_NOTE_CREDIT'
            - 'PRE_NOTE_DEBIT'
        last4SSN:
          description:
            'Identifies the last four digits of the government issued (SSN, EIN,
            TIN).'
          type: 'string'
          pattern: "\\d{4}"
          example: '1234'
        consumerVerificationId:
          description:
            "A unique identifier assigned by a government agency. Examples
            include Driver's License number, green card id, and Passport number."
          type: 'string'
          maxLength: 28
        consumerVerificationIdType:
          description: 'Classifies the type of identifier.'
          type: 'string'
          enum:
            - 'US_DL'
            - 'US_MILITARY'
            - 'PASSPORT'
            - 'RES_ALIEN_ID'
            - 'STATE_ID'
            - 'STUDENT_ID'
            - 'FOREIGN_DL'
            - 'CAN_DL'
            - 'MEX_DL'
            - 'OTH_PRIM_ID'
            - 'MAT_CONSULAR_ID'
        individualBirthDate:
          description:
            'Specifies the year month and day on which the individual was born.'
          type: 'string'
          format: 'date'
          example: '2000-09-20'
        consumerVerificationIdState:
          description:
            'Classifies a geographic area that represents a first level, legal
            and political subdivision of a country; for example, Virginia,
            Bavaria.'
          type: 'string'
          minLength: 2
          maxLength: 3
          format: '[A-Za-z]*'
          example: 'FL'
    financialInstitutionRoutingNumber:
      description:
        "Identifies the routing and transit number. In the United  States it's
        8-9 numeric characters."
      type: 'string'
      maxLength: 9
    paymentType:
      description:
        'Identifies how accountholders  initiated debits to their accounts .'
      type: 'string'
      enum:
        - 'WEB'
        - 'TEL'
        - 'RECURRING'
    accountType:
      description: 'Type of banking account.'
      type: 'string'
      enum:
        - 'CHECKING'
        - 'SAVING'
        - 'CORPORATE_CHECKING'
    unmaskedAccountNumber:
      description: 'Identifies a unique occurrence of a payment account.'
      type: 'string'
      readOnly: true
      maxLength: 19
