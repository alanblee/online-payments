{
	"info": {
		"_postman_id": "34e1cbed-52de-4a2d-bcdc-edbf7675d5b4",
		"name": "Embedded Banking - Core API Requests",
		"description": "# Setup\n\n## Set up Postman\n\n1. Install Postman either from: [https://www.postman.com/downloads/](https://www.postman.com/downloads/) OR from your organization's trusted source.\n2. To Import the JPMC API Collections , select File -> Import (or click on the \"Import\" button). Upload the postman collection file and follow the instructions.\n    \n\n### Set up Transport Certificates and Key\n\n1. Have the Transport Certificates downloaded (refer to Getting Started on the API Portal to generate certifcates).\n2. In File -> Settings -> Certificates, click \"Add Certificate\".\n3. Configure the Host:\n    1. For CAT : apigatewaycat.jpmorgan.com\n    2. For production : apigateway.jpmorgan.com\n4. Add the location of the CRT file: This is the Transport Certificate file.\n5. Add the location of the transport certificate KEY file: You get this file when you create the CSR while uploading to “Certification Authority”\n6. Click “Add” to add the certificate.\n7. Make sure to turn off “SSL certificates verification” in the “General” tab.\n    \n\n## Configure Postman Variables\n\nThis Postman Collection uses the CAT Digital Private Certificate .key to encode payloads. To set this up, select File -> New -> Environment. You may rename \"New Environment\" to a preferred name, e.g. \"CAT Environment\".\n\nSetup the following Postman Environment Variables:\n\n1. signature_cert_private_key - a full copy-paste of your signature private key file content. Open the Digital Private Certificate .key file that you got during the CSR signing phase in a text editor and copy the contents entirely without missing any characters (Ctrl-C). Please note, this is a second private key that was generated along with digital certificates.\n2. signed_request - a variable to hold signed POST payload between requests. You can leave this empty.\n3. idp_token_header - IDP token with \"Bearer \" prefix.\n4. client_id_header - client_id which will be used in API calls\n    \n\nTo enable this newly created Postman environment, click on the top right section where it says \"No Environment\" and set it to your new environment.\n\nThere is also a collection level variable api-url which is set to the Client Testing / CAT environment by default.\n\n## How to run POST API Requests\n\nEvery POST API payload should be signed with a signature certificate which have been uploaded to the Developer Portal. We've created a utility API request \"Sign JSON Payload for POST requests\" (located in the root of this Collection) which should help you to generate a signed payload from the JSON one. It is not invoking any real server API but assigning a signed payload value from the request body to the Postman Environmental variable.\n\n\"Sign JSON Payload for POST requests\" has a number of examples representing EB common POST API requests.\n\nEach POST API request in this collection is using {{signed_request_body}} variable as a request body",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2705907"
	},
	"item": [
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Create",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{signed_request_body}}"
						},
						"url": {
							"raw": "{{api_url}}/transactions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{api_url}}/transactions/:id",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"transactions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "a22eba27-9ac1-4217-919f-bafafab604f6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{signed_request_body}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_url}}/transactions/search",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"transactions",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api_url}}/transactions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{api_url}}/accounts",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{api_url}}/accounts/:id",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "017ef611f6df40ff894248426da39bd5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{api_url}}/accounts/:id/balances",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"accounts",
								":id",
								"balances"
							],
							"variable": [
								{
									"key": "id",
									"value": "017ef611f6df40ff894248426da39bd5"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Recipients",
			"item": [
				{
					"name": "Get",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api_url}}/recipients/:id",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"recipients",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "9880705e-fcb3-4c2e-b7be-f688c10dfb23"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{api_url}}/recipients",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"recipients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{signed_request_body}}",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{api_url}}/recipients",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"recipients"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Clients",
			"item": [
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "platform_id",
								"value": "1956149012",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "ClientDN",
								"value": "OBTSTSTCL1_DN",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"products\": [\r\n        \"EB\"\r\n    ],\r\n    \"businessType\": \"Business\",\r\n    \"legalStructure\": \"Corporate\",\r\n    \"industryCategory\": \"Retail\",\r\n    \"industryType\": \"Correspondence Schools\",\r\n    \"significantOwnership\": true,\r\n    \"entitiesInOwnership\": false,\r\n    \"businessName\": \"Rob's Golf Shop\",\r\n    \"businessAliasName\": \"Golf Shop of Robert\",\r\n    \"parentProfileId\": \"0005191231\",\r\n    \"identities\": [\r\n        {\r\n            \"idType\": \"EIN\",\r\n            \"idDescription\": \"EIN\",\r\n            \"idIssuer\": \"US\",\r\n            \"idValue\": \"1666656090\"\r\n        }\r\n    ],\r\n    \"businessDescription\": \"A shop which does not sell Golf kits\",\r\n    \"address\": {\r\n        \"addressType\": \"Principal place of business\",\r\n        \"addressLine1\": \"123 Maryland\",\r\n        \"addressLine2\": \"Land of Maries\",\r\n        \"addressLine3\": \"Mary Gold lane\",\r\n        \"city\": \"Chicago\",\r\n        \"state\": \"CA\",\r\n        \"postalCode\": \"77777\",\r\n        \"countryCode\": \"US\"\r\n    },\r\n    \"email\": \"rgs@rgs.com\",\r\n    \"phone\": {\r\n        \"countryCode\": \"+1\",\r\n        \"phoneNumber\": \"2020304567\"\r\n    },\r\n    \"websiteAvailable\": true,\r\n    \"website\": \"https://www.robsgolfshop.com\",\r\n    \"countryOfFormation\": \"US\",\r\n    \"yearOfFormation\": \"2022\",\r\n    \"relatedParties\": [\r\n        {\r\n            \"partyType\": \"Individual\",\r\n            \"partyRole\": \"CONTROLLER\",\r\n            \"prefix\": \"Mr\",\r\n            \"firstName\": \"Alex\",\r\n            \"middleName\": \"X\",\r\n            \"lastName\": \"Singh\",\r\n            \"suffix\": \"dsuza\",\r\n            \"jobTitle\": \"CEO\",\r\n            \"address\": {\r\n                \"addressType\": \"string\",\r\n                \"addressLine1\": \"456 Rose Garden\",\r\n                \"addressLine2\": \"Rose Lane\",\r\n                \"addressLine3\": \"Rose House\",\r\n                \"city\": \"Newyork\",\r\n                \"state\": \"NY\",\r\n                \"postalCode\": \"88888\",\r\n                \"countryCode\": \"US\"\r\n            },\r\n            \"birthDate\": \"1990-01-01\",\r\n            \"identities\": [\r\n                {\r\n                    \"idType\": \"SSN\",\r\n                    \"idDescription\": \"SSN\",\r\n                    \"idIssuer\": \"US\",\r\n                    \"idValue\": \"999999999\"\r\n                }\r\n            ],\r\n            \"email\": \"Alex.singh@rgs.com\",\r\n            \"phone\": {\r\n                \"countryCode\": \"+1\",\r\n                \"phoneNumber\": \"345345345\"\r\n            }\r\n        },\r\n        {\r\n            \"partyType\": \"Individual\",\r\n            \"partyRole\": \"OWNER\",\r\n            \"prefix\": \"Mr\",\r\n            \"firstName\": \"Felix\",\r\n            \"middleName\": \"X\",\r\n            \"lastName\": \"Raj\",\r\n            \"suffix\": \"d'suza\",\r\n            \"address\": {\r\n                \"addressType\": \"\",\r\n                \"addressLine1\": \"5 Papaya Lane\",\r\n                \"addressLine2\": \"Papaya Centre\",\r\n                \"addressLine3\": \"Papaya Garden\",\r\n                \"city\": \"Manhatten\",\r\n                \"state\": \"MA\",\r\n                \"postalCode\": \"88373\",\r\n                \"countryCode\": \"US\"\r\n            },\r\n            \"identities\": [\r\n                {\r\n                    \"idType\": \"SSN\",\r\n                    \"idDescription\": \"SSN\",\r\n                    \"idIssuer\": \"US\",\r\n                    \"idValue\": \"999999989\"\r\n                }\r\n            ],\r\n            \"email\": \"felix.raj@rgs.com\",\r\n            \"phone\": {\r\n                \"countryCode\": \"+1\",\r\n                \"phoneNumber\": \"1237653894\"\r\n            },\r\n            \"natureOfOwnership\": \"Direct\",\r\n            \"percentageOfOwnership\": \"100\",\r\n            \"sourceOfWealth\": \"String\",\r\n            \"sourceOfWealthDescription\": \"Inheritance\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{ExternalUAT}}/clients",
							"host": [
								"{{ExternalUAT}}"
							],
							"path": [
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "platform_id",
								"type": "text",
								"value": "0030000132"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "ClientDN",
								"type": "text",
								"value": "OBTSTSTCL1_DN"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"0030000135\",\r\n    \"businessName\": \"The Soup Kitchen\",\r\n    \"businessType\": \"Business\",\r\n    \"industryType\": \"Accommodation and Food Serv12\",\r\n    \"businessDescription\": \"Accommodation and Food Services\",\r\n    \"websiteAvailable\": false,\r\n    \"legalStructure\": \"Partnership\",\r\n    \"significantOwnership\": false,\r\n    \"entitiesInOwnership\": false,\r\n    \"phone\": {\r\n        \"countryCode\": \"001\",\r\n        \"phoneNumber\": \"2127773888\"\r\n    },\r\n    \"identities\": [\r\n        {\r\n            \"idType\": \"ECID\",\r\n            \"idDescription\": \"ECID\",\r\n            \"idIssuer\": \"US\",\r\n            \"idValue\": \"111200302\"\r\n        },\r\n        {\r\n            \"idType\": \"EIN\",\r\n            \"idDescription\": \"Employer identification number\",\r\n            \"idIssuer\": \"US\",\r\n            \"idValue\": \"555443211\"\r\n        }\r\n    ],\r\n    \"address\": {\r\n        \"addressLine1\": \"205 E Houston St12345\",\r\n        \"city\": \"New York City\",\r\n        \"state\": \"NY\",\r\n        \"postalCode\": \"10056\",\r\n        \"country\": \"United States of America\",\r\n        \"countryCode\": \"US\",\r\n        \"source\": \"EB\",\r\n        \"addressType\": \"Principal place of business\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{ExternalUAT}}/clients/:id",
							"host": [
								"{{ExternalUAT}}"
							],
							"path": [
								"clients",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"type": "text",
								"value": "0030000132"
							},
							{
								"key": "ClientDN",
								"type": "text",
								"value": "OBTSTSTCL1_DN"
							},
							{
								"key": "platform_id",
								"value": "0030000132",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{ExternalUAT}}/clients/:id",
							"host": [
								"{{ExternalUAT}}"
							],
							"path": [
								"clients",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1956149012"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"type": "text",
								"value": "0030000132"
							},
							{
								"key": "ClientDN",
								"type": "text",
								"value": "OBTSTSTCL1_DN"
							},
							{
								"key": "platform_id",
								"value": "0030000132",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{ExternalUAT}}/clients",
							"host": [
								"{{ExternalUAT}}"
							],
							"path": [
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "ClientDN",
								"type": "text",
								"value": "OBTSTSTCL1_DN"
							},
							{
								"key": "platform_id",
								"value": "0030000132",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"0030000135\",\r\n    \"businessName\": \"The Soup Kitchen\",\r\n    \"businessType\": \"Business\",\r\n    \"industryType\": \"Accommodation and Food Serv12\",\r\n    \"businessDescription\": \"Accommodation and Food Services\",\r\n    \"websiteAvailable\": false,\r\n    \"legalStructure\": \"Partnership\",\r\n    \"significantOwnership\": false,\r\n    \"entitiesInOwnership\": false,\r\n    \"phone\": {\r\n        \"countryCode\": \"001\",\r\n        \"phoneNumber\": \"2127773888\"\r\n    },\r\n    \"identities\": [\r\n        {\r\n            \"idType\": \"ECID\",\r\n            \"idDescription\": \"ECID\",\r\n            \"idIssuer\": \"US\",\r\n            \"idValue\": \"111200302\"\r\n        },\r\n        {\r\n            \"idType\": \"EIN\",\r\n            \"idDescription\": \"Employer identification number\",\r\n            \"idIssuer\": \"US\",\r\n            \"idValue\": \"555443211\"\r\n        }\r\n    ],\r\n    \"address\": {\r\n        \"addressLine1\": \"205 E Houston St12345\",\r\n        \"city\": \"New York City\",\r\n        \"state\": \"NY\",\r\n        \"postalCode\": \"10056\",\r\n        \"country\": \"United States of America\",\r\n        \"countryCode\": \"US\",\r\n        \"source\": \"EB\",\r\n        \"addressType\": \"Principal place of business\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{ExternalUAT}}/clients/:id/verifications",
							"host": [
								"{{ExternalUAT}}"
							],
							"path": [
								"clients",
								":id",
								"verifications"
							],
							"variable": [
								{
									"key": "id",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cases",
			"item": [
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{signed_request_body}}"
						},
						"url": {
							"raw": "{{api_url}}/cases",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"cases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{signed_request_body}}"
						},
						"url": {
							"raw": "{{api_url}}/cases/:id",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"cases",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "0030000132"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{api_url}}/cases/:id",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"cases",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "00002600"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{api_url}}/cases",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"cases"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Debit Cards",
			"item": [
				{
					"name": "Update Change PIN",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "default"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{signed_request_body}}"
						},
						"url": {
							"raw": "{{api_url}}/debit-cards/:id",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"debit-cards",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "100001552507"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{api_url}}/debit-cards/:id",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"debit-cards",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "100001552507"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{api_url}}/debit-cards",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"debit-cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "client_id",
								"value": "{{client_id_header}}",
								"type": "default"
							},
							{
								"key": "token",
								"value": "{{idp_token_header}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{signed_request_body}}"
						},
						"url": {
							"raw": "{{api_url}}/debit-cards",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"debit-cards"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sign JSON Payload for POST requests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"        const navigator = {} //fake a navigator object for the lib\r",
							"        const window = {} //fake a window object for the lib\r",
							"\r",
							"        pm.sendRequest(\"https://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js\", (error, response) => {\r",
							"            if (error || response.code !== 200) {\r",
							"                pm.expect.fail('Could not load external library');\r",
							"            }\r",
							"            eval(response.text());\r",
							"\r",
							"            var requestData = JSON.stringify(pm.request.body.raw);\r",
							"            \r",
							"            requestData = requestData.replace(/\\\\n/g,\"\").replace(/\\\\r/g,\"\").replace(/\\\\/g,\"\").slice(1, -1);\r",
							"\r",
							"            var header = {\"alg\" : \"RS256\"};\r",
							"            var sHeader = JSON.stringify(header);          \r",
							"\r",
							"            var requestBodyJWT = KJUR.jws.JWS.sign(header.alg, sHeader, requestData, pm.environment.get(\"signature_cert_private_key\").replace(/^\\s+|\\s+$/g, ''));\r",
							"\r",
							"            console.log(requestBodyJWT)\r",
							"\r",
							"            pm.environment.set(\"signed_request_body\",requestBodyJWT);\r",
							"\r",
							"        })"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"pin\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://postman-echo.com/get",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					]
				},
				"description": "The JPMC Postman sample collections uses the \"Jsrassign\" Open Source JavaScript library (https://kjur.github.io/jsrsasign) to create JSON Web Tokens (JWT). You can see this in “GET” requests as mentioned in below screenshot. Please note, this is needed for any POST request that CREATE/MODIFY data in JPMC."
			},
			"response": [
				{
					"name": "Create Recipient",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Create ACH Transaction",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Create Debit Card",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Update Debit Card PIN",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Create a Support Case",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api_url",
			"value": "https://apigatewaycat.jpmorgan.com/tsapi/v1/eb/",
			"type": "string"
		}
	]
}